{"version":3,"sources":["App/components/base/PaisUpSert.js","App/components/base/PaisListar.js","App/pages/PaisPage.js","App/components/base/NoAutorizado.js"],"names":["PaisUpSert","dataInicial","abrirModal","setAbrirModal","GetPaises","useForm","values","handleOnChange","useState","loading","setLoading","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","response","handleOnSubmit","e","preventDefault","paisId","Modal","show","onHide","Loading","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Form","Row","Group","Col","md","Label","htmlFor","name","id","required","value","onChange","errorMessage","placeholder","autoComplete","type","descripcion","style","textTransform","minLength","nacionalidad","estadoId","className","onClick","PaisListar","state","useSelector","accesos","setAccesos","paises","setPaises","initData","setdataInicial","find","acceso","accesoId","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","sm","Card","Button","variant","Table","striped","hover","responsive","bordered","map","estado","Estado","key","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","NoAutorizado","PaisPage","Heading"],"mappings":"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","file":"static/js/33.a85fdb5f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nexport const PaisUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetPaises }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('pais', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"El pais fue registrado exitosamente\");\r\n            GetPaises();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('pais', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetPaises();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.paisId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la informaci贸n solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.paisId > 0 ? 'Actualizar Informaci贸n del Pais' : 'Registrar Nuevo Pais'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    {\r\n                                        dataInicial.paisId <= 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"paisId\">C贸digo</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"paisId\"\r\n                                                id=\"paisId\"\r\n                                                required\r\n                                                value={values.paisId}\r\n                                                onChange={handleOnChange}\r\n                                                errorMessage={errorMessage}\r\n                                                placeholder=\"C贸digo\"\r\n                                                autoComplete=\"off\"\r\n                                                type=\"numer\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">Nombre</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Nombre\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            autoComplete=\"off\"\r\n                                            minLength=\"5\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"nacionalidad\">Nacionalidad</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"nacionalidad\"\r\n                                            id=\"nacionalidad\"\r\n                                            required\r\n                                            value={values.nacionalidad}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Nacionalidad\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            autoComplete=\"off\"\r\n                                            minLength=\"5\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.paisId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.paisId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { useSelector } from 'react-redux'; \r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { PaisUpSert } from './PaisUpSert';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 8;\r\nexport const PaisListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n    const [paises, setPaises] = useState([]);\r\n    const initData = {\r\n        paisId: '',\r\n        descripcion: '',\r\n        nacionalidad: '',\r\n        estadoId: 1\r\n    };\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n\r\n    const GetPaises = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi(`pais?estadoId=1;2`);\r\n            if (response) {\r\n                setPaises(response);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { paisId, descripcion, nacionalidad, estadoId } = paises.find(item => item.paisId === id);\r\n        setdataInicial({\r\n            paisId,\r\n            descripcion,\r\n            nacionalidad,\r\n            estadoId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`pais/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    GetPaises();\r\n                }\r\n            } else {\r\n                alert_warning('No se elimin贸 ning煤n elemento');\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetPaises();\r\n    }, [accesos]);\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Pais</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar Pais</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"table_dentificaciones_persona\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>C贸digo</th>\r\n                                                            <th>Nombre</th>\r\n                                                            <th>Nacionalidad</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            paises.map(({ paisId, descripcion, nacionalidad, Estado: { descripcion: estado } }) => (\r\n                                                                <tr key={paisId}>\r\n                                                                    <td>{paisId}</td>\r\n                                                                    <td>{descripcion}</td>\r\n                                                                    <td>{nacionalidad}</td>\r\n                                                                    <td>{estado}</td>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(paisId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(paisId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <PaisUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} GetPaises={GetPaises} dataInicial={dataInicial} />\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { PaisListar } from '../components/base/PaisListar';\r\nconst PaisPage = () => {\r\n    return (\r\n        <PaisListar/>\r\n    )\r\n}\r\n\r\nexport default PaisPage\r\n\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Informaci贸n!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignaci贸n de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}