{"version":3,"sources":["App/components/encuesta/EncuentaProductos.js","App/components/encuesta/EncuestaUpSert.js","App/components/encuesta/EncuestaNew.js","App/pages/encuesta/EncuestaPage.js","App/components/base/NoAutorizado.js"],"names":["EncuentaProductos","infoProducto","handleOnChangeItemProd","Form","Row","Group","as","Col","md","Label","htmlFor","name","id","autoComplete","value","nombre","type","disabled","required","precio","onChange","errorMessage","placeholder","precio_mayorista","cantidad_mayorista","observaciones","multiline","EncuestaUpSert","abrirModal","setAbrirModal","GetEncuesta","accesos","listDeptos","useDispatch","useState","loading","setLoading","listProductos","setListProductos","departamentoId","setDepartamentoId","catMunicipio","setCatMunicipio","indexActual","setIndexActual","regresar","setRegresar","indexTotal","setIndexTotal","listProductoConsulta","setListProductosConsulta","useForm","municipioId","values","handleOnChange","valuesItemProducto","setData","handleOnSubmit","a","data","detalle","callApi","method","body","JSON","stringify","alert_exitoso","Ordenar","b","Number","GetProductos","response","length","sort","GetMunicipio","find","acceso","menuId","accesoId","descripcion","useEffect","itemProd","encuesta_productoId","alert","console","log","Modal","show","onHide","size","Loading","Header","closeButton","Title","Body","style","textTransform","target","map","key","className","onClick","String","trim","dataActual","push","alert_warning","EncuestaNew","state","useSelector","setAccesos","listEncuestas","setListEncuestas","setListDeptos","GetDepartamentos","misAccesos","filter","item","GetAccesosByMenuId","sm","Card","Button","variant","Table","striped","hover","responsive","bordered","encuesta_comercioId","Municipio","descMunicipio","descDepto","Departamento","NoAutorizado","EncuestaPage","Heading"],"mappings":"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","file":"static/js/39.e0b82904.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Col } from 'react-bootstrap'\r\nimport { Form } from 'react-bootstrap'\r\nimport { TextInput } from 'react-bootstrap4-form-validation'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const EncuentaProductos = ({ infoProducto,handleOnChangeItemProd}) => {\r\n    const errorMessage = \"Campo obligatorio\";\r\n    return (\r\n        <>\r\n            <Form.Row>\r\n                <Form.Group as={Col} md=\"12\">\r\n                    <Form.Label htmlFor=\"nombre\">Producto</Form.Label>\r\n                    <TextInput\r\n                        name=\"nombreProducto\"\r\n                        id=\"nombreProducto\"\r\n                        autoComplete=\"off\"\r\n                        value={infoProducto.nombre}\r\n                        type=\"text\"\r\n                        disabled={true}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"12\">\r\n                    <Form.Label htmlFor=\"nombre\">Precio Normal</Form.Label>\r\n                    <TextInput\r\n                        name=\"precio\"\r\n                        id=\"precio\"\r\n                        required\r\n                        value={infoProducto.precio}\r\n                        onChange={handleOnChangeItemProd}\r\n                        errorMessage={errorMessage}\r\n                        placeholder=\"Precio de venta\"\r\n                        autoComplete=\"off\"\r\n                        type=\"number\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"12\">\r\n                    <Form.Label htmlFor=\"precio_mayorista\">Precio Mayorista</Form.Label>\r\n                    <TextInput\r\n                        name=\"precio_mayorista\"\r\n                        id=\"precio_mayorista\"\r\n                        required\r\n                        value={infoProducto.precio_mayorista}\r\n                        onChange={handleOnChangeItemProd}\r\n                        errorMessage={errorMessage}\r\n                        placeholder=\"Precio Mayorista\"\r\n                        autoComplete=\"off\"\r\n                        type=\"number\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"12\">\r\n                    <Form.Label htmlFor=\"cantidad_mayorista\">Cuanto debe de comprar para aplicar a precio de mayorista</Form.Label>\r\n                    <TextInput\r\n                        name=\"cantidad_mayorista\"\r\n                        id=\"cantidad_mayorista\"\r\n                        required\r\n                        value={infoProducto.cantidad_mayorista}\r\n                        onChange={handleOnChangeItemProd}\r\n                        errorMessage={errorMessage}\r\n                        placeholder=\"Cantidad que se debe de comprar para ser mayorista\"\r\n                        autoComplete=\"off\"\r\n                        type=\"number\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"12\">\r\n                    <Form.Label htmlFor=\"observaciones\">Agregar observaciones si es necesario</Form.Label>\r\n                    <TextInput\r\n                        name=\"observaciones\"\r\n                        id=\"observaciones\"\r\n                        required\r\n                        value={infoProducto.observaciones}\r\n                        onChange={handleOnChangeItemProd}\r\n                        errorMessage={errorMessage}\r\n                        placeholder=\"Observaciones\"\r\n                        autoComplete=\"off\"\r\n                        type=\"text\"\r\n                        multiline\r\n                    />\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport { UpdateUserInfo } from '../../../actions/auth';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from '../base/Loading';\r\nimport { EncuentaProductos } from './EncuentaProductos';\r\nimport { Alert } from 'bootstrap';\r\nconst menuIdMunicipio = 10;\r\nexport const EncuestaUpSert = ({ abrirModal, setAbrirModal, GetEncuesta, accesos, listDeptos }) => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const [listProductos, setListProductos] = useState([]);\r\n    const [departamentoId, setDepartamentoId] = useState('');\r\n    const [catMunicipio, setCatMunicipio] = useState([]);\r\n    const [indexActual, setIndexActual] = useState(-1);\r\n    const [regresar, setRegresar] = useState(false);\r\n    const [indexTotal, setIndexTotal] = useState(0);\r\n    const [listProductoConsulta, setListProductosConsulta] = useState([]);\r\n    const [values, handleOnChange] = useForm({\r\n        nombre: '',\r\n        municipioId: ''\r\n    });\r\n    const [valuesItemProducto, handleOnChangeItemProd, , setData] = useForm({\r\n        nombre: '',\r\n        precio: 0,\r\n        precio_mayorista: 0,\r\n        cantidad_mayorista: 0,\r\n        observaciones: ''\r\n    });\r\n    const onchangeDepartamento = ({ target }) => {\r\n        setDepartamentoId(target.value)\r\n    }\r\n\r\n    const handleOnSubmit = async () => {\r\n        setLoading(true);\r\n        let data = {};\r\n        data.nombre = values.nombre;\r\n        data.municipioId = values.municipioId;\r\n        data.detalle = listProductoConsulta;\r\n\r\n        let response = await callApi('encuesta', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Cotización registrada exitosamente\");\r\n            GetEncuesta();\r\n            setAbrirModal(false);\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n    const handlePrueba = () => {\r\n        if (String(values.nombre).trim().length > 0) {\r\n            if (Number(values.municipioId) > 0) {\r\n                if (indexActual < indexTotal) {\r\n                    setRegresar(false);\r\n                    if (indexActual >= 0) {\r\n                        let dataActual = listProductoConsulta || [];\r\n                        dataActual.push(valuesItemProducto);\r\n                        setListProductosConsulta(dataActual);\r\n                    }\r\n                    setIndexActual(indexActual + 1);\r\n                }\r\n            } else {\r\n                alert_warning(\"Por favor seleccione el municipio\");\r\n            }\r\n        } else {\r\n            alert_warning(\"Por favor ingrese el nombre del negocio\");\r\n        }\r\n    }\r\n\r\n    const handleAnterior = () => {\r\n        if (indexActual > -1) {\r\n            let intemAnterio=listProductoConsulta[(indexActual-1)];\r\n            setRegresar(true);\r\n            setData(intemAnterio);\r\n            setIndexActual(indexActual - 1);\r\n        }\r\n    }\r\n    const Ordenar = (a, b) => (Number(a) - Number(b));\r\n    const GetProductos = async () => {\r\n        setLoading(true);\r\n        let response = await callApi('encuesta/producto');\r\n        if (response) {\r\n            setIndexTotal(response.length);\r\n            setListProductos(response.sort(Ordenar));\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n    const GetMunicipio = async (id) => {\r\n        if (id > 0) {\r\n            if (accesos.find(acceso => acceso.menuId === menuIdMunicipio && acceso.accesoId === 3)) {\r\n                setLoading(true);\r\n                let response = await callApi(`municipio?departamentoId=${id}&estadoId=1&include=0`);\r\n                if (response) {\r\n                    setCatMunicipio(response);\r\n                }\r\n            } else {\r\n                setCatMunicipio([{ municipioId: '', descripcion: 'No esta autorizado' }]);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        GetMunicipio(departamentoId);\r\n    }, [departamentoId]);\r\n\r\n    useEffect(() => {\r\n        GetProductos();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (indexActual >= 0 && indexActual < indexTotal) {\r\n            let itemProd = listProductos[indexActual];\r\n            if (itemProd) {\r\n                let { encuesta_productoId, nombre } = itemProd;\r\n                let infoAux = {\r\n                    encuesta_productoId,\r\n                    nombre,\r\n                    precio: 0,\r\n                    precio_mayorista: 0,\r\n                    cantidad_mayorista: 0,\r\n                    observaciones: ''\r\n                }\r\n                if(!regresar){\r\n                setData(infoAux);\r\n                }\r\n\r\n            } else {\r\n                alert(\"No existe\")\r\n            }\r\n        }\r\n    }, [indexActual]);\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    console.log({ indexActual, indexTotal, listProductoConsulta })\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)} size=\"lg\">\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{indexActual >= 0 ? `COTIZACIPON ${values.nombre}` : 'NUEVA COTIZACIÓN'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm>\r\n                                {\r\n                                    indexActual === -1 ?\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"12\">\r\n                                                <Form.Label htmlFor=\"nombre\">Nombre del Negocio</Form.Label>\r\n                                                <TextInput\r\n                                                    name=\"nombre\"\r\n                                                    id=\"nombre\"\r\n                                                    required\r\n                                                    value={values.nombre}\r\n                                                    onChange={handleOnChange}\r\n                                                    errorMessage={errorMessage}\r\n                                                    placeholder=\"Nombre del negocio\"\r\n                                                    autoComplete=\"off\"\r\n                                                    style={{ textTransform: textTransform }}\r\n                                                    type=\"text\"\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"12\">\r\n                                                <Form.Label htmlFor=\"departamentoId\">Departamento</Form.Label>\r\n                                                <SelectGroup\r\n                                                    name=\"departamentoId\"\r\n                                                    id=\"departamentoId\"\r\n                                                    required\r\n                                                    value={departamentoId}\r\n                                                    onChange={onchangeDepartamento}\r\n                                                    errorMessage={errorMessage}>\r\n                                                    <option value=\"\">Seleccione un departamento</option>\r\n                                                    {\r\n                                                        listDeptos.map(({ departamentoId, descripcion }) => (\r\n                                                            <option value={departamentoId} key={departamentoId}>{descripcion}</option>\r\n                                                        )\r\n                                                        )\r\n                                                    }\r\n                                                </SelectGroup>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group as={Col} md=\"12\">\r\n                                                <Form.Label htmlFor=\"municipioId\">Municipio</Form.Label>\r\n                                                <SelectGroup\r\n                                                    name=\"municipioId\"\r\n                                                    id=\"municipioId\"\r\n                                                    required\r\n                                                    value={values.municipioId}\r\n                                                    onChange={handleOnChange}\r\n                                                    errorMessage={errorMessage}>\r\n                                                    <option value=\"\">Seleccione un municipio</option>\r\n                                                    {\r\n                                                        catMunicipio.map(({ municipioId, descripcion }) => (\r\n                                                            <option value={municipioId} key={municipioId}>{descripcion}</option>\r\n                                                        ))\r\n                                                    }\r\n                                                </SelectGroup>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                        : (indexActual < indexTotal) ?\r\n                                            <>\r\n                                                <h4>Productos</h4>\r\n                                                <hr></hr>\r\n                                                <EncuentaProductos infoProducto={valuesItemProducto} handleOnChangeItemProd={handleOnChangeItemProd} />\r\n                                                <hr></hr>\r\n                                            </>\r\n                                            : <Form.Row>\r\n                                                <p>Gracias por completar la cotización, por favor presione en el boton finalizar para enviar la cotización.</p>\r\n                                            </Form.Row>\r\n                                }\r\n                                <Form.Row>\r\n\r\n                                    {\r\n                                       false  && // (indexActual < indexTotal)\r\n                                        <button type=\"button\" className=\"btn btn-success mr-2\" onClick={handleAnterior}>Anterior</button>\r\n                                    }\r\n                                    {\r\n                                        (indexActual < indexTotal) ?\r\n                                            <button type=\"button\" className=\"btn btn-success ml-2\" onClick={handlePrueba}>Siguiente</button>\r\n                                            : <button type=\"button\" className=\"btn btn-success ml-2\" onClick={handleOnSubmit}>Finalizar</button>\r\n                                    }\r\n\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { NoAutorizado } from '../base/NoAutorizado';\r\nimport Loading from '../base/Loading';\r\nimport { EncuestaUpSert } from './EncuestaUpSert';\r\nconst menuId = -1;\r\nconst menuIdDepartamento = 9;\r\nconst menuIdMunicipio = 10;\r\nexport const EncuestaNew = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n    const [listEncuestas, setListEncuestas] = useState([]);\r\n    const [listDeptos, setListDeptos] = useState([]);\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId || item.menuId === menuIdDepartamento || item.menuId === menuIdMunicipio);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n    }\r\n    const GetDepartamentos = async () => {\r\n        if (accesos.find(acceso => acceso.menuId === menuIdDepartamento && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi('departamento?estadoId=1&include=0');\r\n            if (response) {\r\n                setListDeptos(response);\r\n            }\r\n        } else {\r\n            setListDeptos([{ departamentoId: '', descripcion: 'No esta autorizado' }]);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const GetEncuesta = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi('encuesta?estadoId=1');\r\n            if (response) {\r\n                setListEncuestas(response);\r\n            }\r\n            setLoading(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetEncuesta();\r\n        GetDepartamentos();\r\n    }, [accesos])\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Cotizaciones Realizadas</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Nueva</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Código</th>\r\n                                                            <th>Negocio</th>\r\n                                                            <th>Departamento</th>\r\n                                                            <th>Municipio</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            listEncuestas.map(({ encuesta_comercioId, nombre, Municipio: { descripcion: descMunicipio, Departamento: { descripcion: descDepto } } }) => (\r\n                                                                <tr key={encuesta_comercioId}>\r\n                                                                    <td>{encuesta_comercioId}</td>\r\n                                                                    <td>{nombre}</td>\r\n                                                                    <td>{descDepto}</td>\r\n                                                                    <td>{descMunicipio}</td>\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                :\r\n                                                <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <EncuestaUpSert \r\n                                    abrirModal={abrirModal} \r\n                                    setAbrirModal={setAbrirModal} \r\n                                    GetEncuesta={GetEncuesta} \r\n                                    listDeptos={listDeptos}\r\n                                    accesos={accesos}\r\n                                     />\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { EncuestaNew } from '../../components/encuesta/EncuestaNew'\r\n\r\nconst EncuestaPage = () => {\r\n    return (\r\n        <EncuestaNew />\r\n    )\r\n}\r\n\r\nexport default EncuestaPage\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}