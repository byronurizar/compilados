{"version":3,"sources":["App/components/contable/CategoriaProductoUpSert.js","App/components/contable/CategoriaProductoListar.js","App/pages/contable/CategoriaPage.js","App/components/base/NoAutorizado.js","helpers/estiloTabla.js"],"names":["CategoriaProductoUpSert","dataInicial","abrirModal","setAbrirModal","GetListado","useForm","values","handleOnChange","useState","loading","setLoading","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","categoriaId","response","handleOnSubmit","e","preventDefault","show","onHide","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Row","Group","Col","md","Label","htmlFor","name","id","required","value","nombre","onChange","errorMessage","placeholder","autoComplete","type","multiline","descripcion","estadoId","className","onClick","CategoriaProductoListar","state","useSelector","accesos","setAccesos","catCategoria","setCatCategoria","initData","setdataInicial","find","acceso","accesoId","limpiarEstiloTabla","asignarEstiloTabla","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","length","sm","Card","Loading","Button","variant","Table","striped","hover","responsive","bordered","map","estado","Estado","key","style","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","listActual","NoAutorizado","CategoriaPage","Heading","$","DataTable","require","selector","filas","setTimeout","destroy","searching","bLengthChange","bAutoWidth","lengthMenu","displayLength","language","processing","search","info","infoEmpty","infoFiltered","infoPostFix","loadingRecords","zeroRecords","emptyTable","paginate","first","previous","next","last","aria","sortAscending","sortDescending"],"mappings":"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","file":"static/js/22.322fe523.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from '../base/Loading';\r\nexport const CategoriaProductoUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetListado }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('categoria', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"La categoría se registro exitosamente\");\r\n            GetListado();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi(`categoria/${dataInicial.categoriaId}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetListado();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.categoriaId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.categoriaId > 0 ? 'Actualizar Categoría' : 'Nueva Categoría'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"nombre\">Nombre</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"nombre\"\r\n                                            id=\"nombre\"\r\n                                            required\r\n                                            value={values.nombre}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Nombre\"\r\n                                            autoComplete=\"off\"\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">Descripción</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            multiline\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Descripción\"\r\n                                            autoComplete=\"off\"\r\n                                            type=\"text\"\r\n                                        \r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.categoriaId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.categoriaId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector } from 'react-redux';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { CategoriaProductoUpSert } from './CategoriaProductoUpSert';\r\nimport { NoAutorizado } from '../base/NoAutorizado';\r\nimport Loading from '../base/Loading';\r\nimport { asignarEstiloTabla, limpiarEstiloTabla } from '../../../helpers/estiloTabla';\r\nconst menuId = 32;\r\nexport const CategoriaProductoListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n\r\n    const [catCategoria, setCatCategoria] = useState([]);\r\n    const initData = {\r\n        categoriaId: '',\r\n        nombre: '',\r\n        descripcion: '',\r\n        estadoId: 1\r\n    };\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n    const GetListado = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            limpiarEstiloTabla(\"#tablecategoria\");\r\n            setLoading(true);\r\n            let response = await callApi('categoria?estadoId=1;2');\r\n            if (response) {\r\n                setCatCategoria(response);\r\n            }\r\n            asignarEstiloTabla(\"#tablecategoria\");\r\n\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { categoriaId, nombre, descripcion, estadoId } = catCategoria.find(item => item.categoriaId === id);\r\n        setdataInicial({\r\n            categoriaId,\r\n            nombre,\r\n            descripcion,\r\n            estadoId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`categoria/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    let listActual = catCategoria.filter(item => item.categoriaId !== id);\r\n                    setCatCategoria(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se eliminó ningún elemento');\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, [state?.accesos]);\r\n\r\n    useEffect(() => {\r\n        GetListado();\r\n    }, [accesos]);\r\n    return (\r\n        accesos.length > 0 &&\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Categorías</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar Categoría</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"tablecategoria\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Codigo</th>\r\n                                                            <th>Nombre</th>\r\n                                                            <th>Descripción</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            catCategoria.map(({ categoriaId, nombre, descripcion, Estado: { descripcion: estado } }) => (\r\n                                                                <tr key={categoriaId}>\r\n                                                                    <td>{categoriaId}</td>\r\n                                                                    <td>{nombre}</td>\r\n                                                                    <td>{descripcion}</td>\r\n                                                                    <td>{estado}</td>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(categoriaId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(categoriaId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <CategoriaProductoUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} GetListado={GetListado} dataInicial={dataInicial} />\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { CategoriaProductoListar } from '../../components/contable/CategoriaProductoListar';\r\n\r\nconst CategoriaPage = () => {\r\n    return (\r\n        <CategoriaProductoListar/>\r\n    )\r\n}\r\n\r\nexport default CategoriaPage;\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n","import $ from 'jquery';\r\n$.DataTable = require('datatables.net-bs');\r\nrequire('datatables.net-responsive-bs');\r\n\r\nexport const asignarEstiloTabla = (selector, filas = 10) => {\r\n    setTimeout(() => {\r\n        $(selector).DataTable().destroy();\r\n        $(selector).DataTable({\r\n            searching: true,\r\n            bLengthChange: false,\r\n            bAutoWidth: false,\r\n            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, \"Todos\"]],\r\n            displayLength: filas,\r\n            language: {\r\n                processing: \"Cargando información\",\r\n                search: \"Filtrar por:\",\r\n                lengthMenu: \"Mostrar _MENU_ filas\",\r\n                info: \"Vizualización  _END_ de _TOTAL_ filas\",\r\n                infoEmpty: \"Vizualización del elemento 0 a 0 de 0 filas\",\r\n                infoFiltered: \"(Filtrado de _MAX_ filas en total)\",\r\n                infoPostFix: \"\",\r\n                loadingRecords: \"Cargando...\",\r\n                zeroRecords: \"No se logró encontrar ninguna coincidencia\",\r\n                emptyTable: \"No existen registros\",\r\n                paginate: {\r\n                    first: \"Primera\",\r\n                    previous: \"Anterior\",\r\n                    next: \"Siguiente\",\r\n                    last: \"Ultima\"\r\n                },\r\n                aria: {\r\n                    sortAscending: \": active para ordenar la columna en orden ascendente\",\r\n                    sortDescending: \": active para ordenar la columna en orden descendente\"\r\n                }\r\n            }\r\n        });\r\n    }, 0);\r\n}\r\nexport const limpiarEstiloTabla = (selector) => {\r\n    $(selector).DataTable().destroy();\r\n}"],"sourceRoot":""}