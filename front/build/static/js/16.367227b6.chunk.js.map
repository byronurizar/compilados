{"version":3,"sources":["helpers/estiloTabla.js","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","App/components/base/PersonaListar.js","App/pages/PersonaPage.js"],"names":["$","DataTable","require","asignarEstiloTabla","selector","filas","searching","bLengthChange","bAutoWidth","lengthMenu","displayLength","language","processing","search","info","infoEmpty","infoFiltered","infoPostFix","loadingRecords","zeroRecords","emptyTable","paginate","first","previous","next","last","aria","sortAscending","sortDescending","limpiarEstiloTabla","destroy","React","createContext","CardImg","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","PersonaListar","state","useSelector","useState","loading","setLoading","accesos","setAccesos","personas","setPersonas","GetPersonas","a","find","acceso","accesoId","callApi","response","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","Row","Col","sm","Loading","to","Table","striped","hover","responsive","bordered","id","map","personaId","nombre1","nombre2","nombre_otros","apellido1","apellido2","apellido_casada","email","fecha_nacimiento","genero","Genero","descripcion","estado","Estado","nombreCompleto","key","moment","format","style","textAlign","btoa","onClick","withReactContent","Swal","fire","title","type","showCloseButton","showCancelButton","then","willDelete","method","alert_exitoso","listActual","alert_warning","NoAutorizado","PersonaPage"],"mappings":"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","file":"static/js/16.367227b6.chunk.js","sourcesContent":["import $ from 'jquery';\r\n$.DataTable = require('datatables.net-bs');\r\nrequire('datatables.net-responsive-bs');\r\n\r\nexport const asignarEstiloTabla = (selector,filas=10) => {\r\n    $(selector).DataTable({\r\n        searching: true,\r\n        bLengthChange: false,\r\n        bAutoWidth: false,\r\n        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, \"Todos\"]],\r\n        displayLength: filas,\r\n        language: {\r\n            processing: \"Cargando informaci贸n\",\r\n            search: \"Filtrar por:\",\r\n            lengthMenu: \"Mostrar _MENU_ filas\",\r\n            info: \"Vizualizaci贸n  _END_ de _TOTAL_ filas\",\r\n            infoEmpty: \"Vizualizaci贸n del elemento 0 a 0 de 0 filas\",\r\n            infoFiltered: \"(Filtrado de _MAX_ filas en total)\",\r\n            infoPostFix: \"\",\r\n            loadingRecords: \"Cargando...\",\r\n            zeroRecords: \"No se logr贸 encontrar ninguna coincidencia\",\r\n            emptyTable: \"No existen registros\",\r\n            paginate: {\r\n                first: \"Primera\",\r\n                previous: \"Anterior\",\r\n                next: \"Siguiente\",\r\n                last: \"Ultima\"\r\n            },\r\n            aria: {\r\n                sortAscending: \": active para ordenar la columna en orden ascendente\",\r\n                sortDescending: \": active para ordenar la columna en orden descendente\"\r\n            }\r\n        }\r\n    });\r\n}\r\nexport const limpiarEstiloTabla=(selector)=>{\r\n        $(selector).DataTable().destroy();\r\n}","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Table\r\n} from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport moment from 'moment';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { limpiarEstiloTabla, asignarEstiloTabla } from '../../../helpers/estiloTabla';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 12;\r\nexport const PersonaListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [personas, setPersonas] = useState([]);\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const GetPersonas = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            limpiarEstiloTabla(\"#mytable\");\r\n            setLoading(true);\r\n            let response = await callApi(`persona?&estadoId=1;2`);\r\n            if (response) {\r\n                setPersonas(response);\r\n            }\r\n        }\r\n        setLoading(false);\r\n        asignarEstiloTabla(\"#mytable\");\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`persona/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    let listActual = personas.filter(item => item.personaId !== id);\r\n                    setPersonas(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se elimin贸 ning煤n elemento');\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetPersonas();\r\n    }, [accesos]);\r\n\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Link variant=\"success\" className=\"btn-sm btn-round has-ripple\" to=\"/base/catalogo/personaupsert\"><i className=\"feather icon-plus\" /> Nueva Persona</Link>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Codigo</th>\r\n                                                            <th>Nombre</th>\r\n                                                            <th>Fecha de Nacimiento</th>\r\n                                                            <th>Correo</th>\r\n                                                            <th>Genero</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            personas.map((item) => {\r\n                                                                const { personaId,\r\n                                                                    nombre1,\r\n                                                                    nombre2,\r\n                                                                    nombre_otros,\r\n                                                                    apellido1,\r\n                                                                    apellido2,\r\n                                                                    apellido_casada,\r\n                                                                    email,\r\n                                                                    fecha_nacimiento, Genero: { descripcion: genero }, Estado: { descripcion: estado } } = item;\r\n                                                                let nombreCompleto = nombre1;\r\n                                                                if (nombre2) {\r\n                                                                    nombreCompleto += \" \" + nombre2;\r\n                                                                }\r\n                                                                if (nombre_otros) {\r\n                                                                    nombreCompleto += \" \" + nombre_otros;\r\n                                                                }\r\n                                                                nombreCompleto += \" \" + apellido1;\r\n\r\n                                                                if (apellido2) {\r\n                                                                    nombreCompleto += \" \" + apellido2;\r\n                                                                }\r\n                                                                if (apellido_casada) {\r\n                                                                    nombreCompleto += \" \" + apellido_casada;\r\n                                                                }\r\n                                                                return (\r\n                                                                    <tr key={personaId}>\r\n                                                                        <td>{personaId}</td>\r\n                                                                        <td>{nombreCompleto}</td>\r\n                                                                        <td>{moment(fecha_nacimiento).format('DD/MM/YYYY')}</td>\r\n                                                                        <td>{email}</td>\r\n                                                                        <td>{genero}</td>\r\n                                                                        <td>{estado}</td>\r\n                                                                        {\r\n                                                                            accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                            <td style={{ textAlign: \"center\" }}>\r\n                                                                                {\r\n                                                                                    accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                    <Link className=\"btn-icon btn btn-info btn-sm\" to={`/base/catalogo/personaupsert/${btoa(`idpersona=${item.personaId}`)}`}><i className=\"feather icon-edit\" /></Link>\r\n                                                                                }\r\n                                                                                {\r\n                                                                                    accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                    <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(item.personaId) }}><i className=\"feather icon-trash-2\" /></button>}\r\n                                                                            </td>\r\n                                                                        }\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { PersonaListar } from '../components/base/PersonaListar';\r\nconst PersonaPage = () => {\r\n    return (\r\n        <PersonaListar />\r\n    )\r\n}\r\n\r\nexport default PersonaPage;"],"sourceRoot":""}