{"version":3,"sources":["helpers/estiloTabla.js","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","App/components/base/BitacoraCambiosListar.js","App/pages/BitacoraCambiosPage.js"],"names":["$","DataTable","require","asignarEstiloTabla","selector","filas","searching","bLengthChange","bAutoWidth","lengthMenu","displayLength","language","processing","search","info","infoEmpty","infoFiltered","infoPostFix","loadingRecords","zeroRecords","emptyTable","paginate","first","previous","next","last","aria","sortAscending","sortDescending","limpiarEstiloTabla","destroy","React","createContext","CardImg","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","BitacoraCambiosListar","state","useSelector","useState","loading","setLoading","accesos","setAccesos","tablas","setTablas","peticiones","setCambios","fechaInicial","setFechaInicial","fechaFinal","setFechaFinal","usuarios","setUsuarios","useForm","tabla","usuarioId","values","setValues","GetUsuarios","a","listUsuario","find","acceso","menuId","accesoId","push","label","callApi","response","map","user_name","GetTablas","lista","item","Object","keys","nombre","valueAux","Cambios","method","JSON","stringify","useEffect","misAccesos","filter","GetAccesosByMenuId","Row","Col","sm","onSubmit","e","preventDefault","Form","Group","md","Label","htmlFor","id","name","classNamePrefix","required","placeholder","onChange","options","dateFormat","selected","fecha","fechaFormat","moment","format","placeholderText","autoComplete","maxDate","Date","type","Loading","Table","striped","hover","responsive","bordered","bitacora_cambiosId","campo","modificadoId","tipo_dato","valor_anterior","valor_nuevo","Usuario","fecha_crea","nombreUsuario","key","NoAutorizado","BitacoraPeticionesPage"],"mappings":"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","file":"static/js/15.d6eb5df4.chunk.js","sourcesContent":["import $ from 'jquery';\r\n$.DataTable = require('datatables.net-bs');\r\nrequire('datatables.net-responsive-bs');\r\n\r\nexport const asignarEstiloTabla = (selector,filas=10) => {\r\n    $(selector).DataTable({\r\n        searching: true,\r\n        bLengthChange: false,\r\n        bAutoWidth: false,\r\n        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, \"Todos\"]],\r\n        displayLength: filas,\r\n        language: {\r\n            processing: \"Cargando informaci贸n\",\r\n            search: \"Filtrar por:\",\r\n            lengthMenu: \"Mostrar _MENU_ filas\",\r\n            info: \"Vizualizaci贸n  _END_ de _TOTAL_ filas\",\r\n            infoEmpty: \"Vizualizaci贸n del elemento 0 a 0 de 0 filas\",\r\n            infoFiltered: \"(Filtrado de _MAX_ filas en total)\",\r\n            infoPostFix: \"\",\r\n            loadingRecords: \"Cargando...\",\r\n            zeroRecords: \"No se logr贸 encontrar ninguna coincidencia\",\r\n            emptyTable: \"No existen registros\",\r\n            paginate: {\r\n                first: \"Primera\",\r\n                previous: \"Anterior\",\r\n                next: \"Siguiente\",\r\n                last: \"Ultima\"\r\n            },\r\n            aria: {\r\n                sortAscending: \": active para ordenar la columna en orden ascendente\",\r\n                sortDescending: \": active para ordenar la columna en orden descendente\"\r\n            }\r\n        }\r\n    });\r\n}\r\nexport const limpiarEstiloTabla=(selector)=>{\r\n        $(selector).DataTable().destroy();\r\n}","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import React, { useEffect, useState } from 'react'\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Form, Row, Col, Card, Table } from 'react-bootstrap';\r\nimport { ValidationForm } from 'react-bootstrap4-form-validation';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { asignarEstiloTabla, limpiarEstiloTabla } from '../../../helpers/estiloTabla';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 27;\r\nconst menuIdUsuario = 17;\r\nexport const BitacoraCambiosListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [tablas, setTablas] = useState([]);\r\n    const [peticiones, setCambios] = useState([]);\r\n    const [fechaInicial, setFechaInicial] = useState('');\r\n    const [fechaFinal, setFechaFinal] = useState('');\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [values, , , setValues] = useForm({\r\n        tabla: '',\r\n        usuarioId: '',\r\n        fechaInicial: '',\r\n        fechaFinal: ''\r\n    });\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => (item.menuId === menuId || item.menuId === menuIdUsuario));\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const GetUsuarios = async () => {\r\n        let listUsuario = [];\r\n        if (accesos.find(acceso => acceso.menuId === menuIdUsuario && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            listUsuario.push({\r\n                value: \"0\",\r\n                label: \"Todos\",\r\n            })\r\n            let response = await callApi('usuario?estadoId=1&include=0');\r\n            if (response) {\r\n                response.map(({ usuarioId, user_name }) => {\r\n                    listUsuario.push({\r\n                        value: usuarioId,\r\n                        label: user_name,\r\n                    })\r\n                });\r\n\r\n            }\r\n        } else {\r\n            listUsuario.push({\r\n                value: \"-1\",\r\n                label: \"No Autorizado\",\r\n            })\r\n        }\r\n        setUsuarios(listUsuario);\r\n        setLoading(false);\r\n    }\r\n    const GetTablas = async () => {\r\n        let lista = [];\r\n        if (accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            lista.push({\r\n                value: \"\",\r\n                label: \"Todas\",\r\n            })\r\n            let response = await callApi('bitacora/cambios/tablas');\r\n            if (response) {\r\n                response.map((item) => {\r\n                    let [nombre] = Object.keys(item);\r\n                    let valueAux = item[`${nombre}`];\r\n                    lista.push({\r\n                        value: valueAux,\r\n                        label: valueAux\r\n                    });\r\n                });\r\n\r\n            }\r\n        } else {\r\n            lista.push({\r\n                value: \"-1\",\r\n                label: \"No Autorizado\",\r\n            })\r\n        }\r\n        setTablas(lista);\r\n        setLoading(false);\r\n    }\r\n\r\n    const Cambios = async () => {\r\n        if (accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            limpiarEstiloTabla(\"#mytable\");\r\n            let response = await callApi('bitacora/cambios', {\r\n                method: 'POST',\r\n                body: JSON.stringify(values)\r\n            });\r\n            if (response) {\r\n                setCambios(response);\r\n            }\r\n            setLoading(false);\r\n            asignarEstiloTabla(\"#mytable\", 25);\r\n        }\r\n    }\r\n\r\n    const handleChangeUsuario = ({ value }) => {\r\n        setValues({ ...values, usuarioId: value });\r\n    }\r\n    const handleChangeTabla = ({ value }) => {\r\n        setValues({ ...values, tabla: value });\r\n    }\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        Cambios();\r\n    }\r\n\r\n    const onchangeFechaIncial = (fecha) => {\r\n        const fechaFormat = moment(fecha).format('YYYY/MM/DD');\r\n        setValues({ ...values, fechaInicial: fechaFormat });\r\n        setFechaInicial(fecha);\r\n    }\r\n    const onchangeFechaFinal = (fecha) => {\r\n        const fechaFormat = moment(fecha).format('YYYY/MM/DD');\r\n        setValues({ ...values, fechaFinal: fechaFormat });\r\n        setFechaFinal(fecha);\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetTablas();\r\n        GetUsuarios();\r\n    }, [accesos])\r\n\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Listado de Cambios</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <Row className=\"align-items-center m-l-0\">\r\n                                <Col>\r\n                                    <ValidationForm onSubmit={handleOnSubmit} >\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"6\">\r\n                                                <Form.Label htmlFor=\"tabla\">Tabla</Form.Label>\r\n                                                <Select\r\n                                                    id=\"tabla\"\r\n                                                    name=\"tabla\"\r\n                                                    className=\"basic-single\"\r\n                                                    classNamePrefix=\"select\"\r\n                                                    required\r\n                                                    placeholder=\"Tabla\"\r\n                                                    onChange={handleChangeTabla}\r\n                                                    options={tablas}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"6\">\r\n                                                <Form.Label htmlFor=\"usuarioId\">Usuario</Form.Label>\r\n                                                <Select\r\n                                                    id=\"usuarioId\"\r\n                                                    name=\"usuarioId\"\r\n                                                    className=\"basic-single\"\r\n                                                    classNamePrefix=\"select\"\r\n                                                    required\r\n                                                    placeholder=\"Usuario\"\r\n                                                    onChange={handleChangeUsuario}\r\n                                                    options={usuarios}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"3\">\r\n                                                <Form.Label htmlFor=\"fechaInicial\">Fecha Inicial</Form.Label>\r\n                                                <div className=\"form-group\">\r\n                                                    <DatePicker\r\n                                                        id=\"fechaInicial\"\r\n                                                        name=\"fechaInicial\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                        selected={fechaInicial}\r\n                                                        onChange={onchangeFechaIncial}\r\n                                                        className=\"form-control\"\r\n                                                        placeholderText=\"dd/MM/yyyy\"\r\n                                                        autoComplete=\"off\"\r\n                                                        maxDate={new Date()}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"3\">\r\n                                                <Form.Label htmlFor=\"fechaFinal\">Fecha Final</Form.Label>\r\n                                                <div className=\"form-group\">\r\n                                                    <DatePicker\r\n                                                        id=\"fechaFinal\"\r\n                                                        name=\"fechaFinal\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                        selected={fechaFinal}\r\n                                                        onChange={onchangeFechaFinal}\r\n                                                        className=\"form-control\"\r\n                                                        placeholderText=\"dd/MM/yyyy\"\r\n                                                        autoComplete=\"off\"\r\n                                                        maxDate={new Date()}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\">\r\n                                                <Form.Label htmlFor=\"status\">&nbsp;&nbsp;</Form.Label>\r\n                                                <button className=\"btn btn-block btn-primary mb-0\" type=\"submit\">Buscar<i className=\"feather icon-search\" /></button>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                    </ValidationForm>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Codigo</th>\r\n                                                            <th>Tabla</th>\r\n                                                            <th>Campo</th>\r\n                                                            <th>Id Modificado</th>\r\n                                                            <th>Tipo de Dato</th>\r\n                                                            <th>Valor Anterior</th>\r\n                                                            <th>Valor Nuevo</th>\r\n                                                            <th>Usuario</th>\r\n                                                            <th>Fecha</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            peticiones.map(({ bitacora_cambiosId, tabla, campo, modificadoId, tipo_dato, valor_anterior, valor_nuevo, Usuario, fecha_crea }) => {\r\n                                                                let nombreUsuario = \"N/A\";\r\n                                                                if (Usuario) {\r\n                                                                    nombreUsuario = Usuario?.user_name ?? \"N/A\";\r\n                                                                }\r\n                                                                return (\r\n                                                                    <tr key={bitacora_cambiosId}>\r\n                                                                        <td>{bitacora_cambiosId}</td>\r\n                                                                        <td>{tabla}</td>\r\n                                                                        <td>{campo}</td>\r\n                                                                        <td>{modificadoId}</td>\r\n                                                                        <td>{tipo_dato}</td>\r\n                                                                        <td>{valor_anterior}</td>\r\n                                                                        <td>{valor_nuevo}</td>\r\n                                                                        <td>{nombreUsuario}</td>\r\n                                                                        <td>{fecha_crea}</td>\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { BitacoraCambiosListar } from '../components/base/BitacoraCambiosListar'\r\nconst BitacoraPeticionesPage = () => {\r\n    return (\r\n        <div>\r\n            <BitacoraCambiosListar/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BitacoraPeticionesPage\r\n"],"sourceRoot":""}