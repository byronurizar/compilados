{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/index.js","App/components/base/CategoriaGastoUpSert.js","../node_modules/uuid/v1.js","../node_modules/uuid/v4.js","App/components/base/SubCategoriaGastoUpSert.js","App/components/base/SubCategoriaGastoListar.js","App/components/base/PresupuestoDetalleUpSert.js","App/components/base/PresupuestoUpSert.js","App/components/base/PresupuestoListar.js","App/pages/PresupuestoPage.js"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","getRandomValues","crypto","bind","msCrypto","window","rnds8","Uint8Array","module","exports","rnds","Array","r","i","Math","random","byteToHex","toString","substr","buf","offset","bth","join","v1","require","v4","uuid","CategoriaGastoUpSert","dataInicial","abrirModal","setAbrirModal","GetCategorias","useForm","values","handleOnChange","useState","loading","setLoading","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","response","handleOnSubmit","e","preventDefault","categoriaId","show","onHide","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Row","Group","Col","md","Label","htmlFor","name","id","required","value","nombre","onChange","errorMessage","placeholder","autoComplete","style","textTransform","type","estadoId","onClick","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","options","b","node","clockseq","undefined","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n","ii","SubCategoriaGastoUpSert","GetSubCategorias","sub_categoriaId","Modal","Loading","Form","SubCategoriaGastoListar","itemCategoria","exit","listSubCategorias","setListSubCategorias","initData","setdataInicial","useEffect","xl","Button","key","Card","textAlign","map","item","index","Estado","descripcion","href","find","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","listActual","filter","PresupuestoDetalleUpSert","handleAddItem","handleEditItem","listCategorias","listItemsDetalle","listCategoriasDisponibles","setListCategoriasDisponibles","listDisponibles","Number","push","presupuesto_detalleId","monto","String","trim","length","datos","uuidv4","console","log","PresupuestoUpSert","GetPresupuesto","handleCloseUpSert","listMeses","setUpSert","listAnios","setListAnios","listMesesMostrar","setListMesesMostrar","setListItemsDetalle","dataInicialItem","setDataInicialItem","detalle","presupuestoId","Detalle","items","Categoria","anios","anioActual","getFullYear","mesActual","getMonth","anio","meses","mesId","render","idDb","idClient","nuevosItems","handleDeleteItem","colSpan","itemsActuales","listItemsActuales","fila","itemMap","PresupuestoListar","upSert","listPresupuesto","setListPrespuesto","setListMeses","setListCategorias","GetMeses","Mes","PresupuestoPage"],"mappings":"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","file":"static/js/10.f31d1539.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nexport const CategoriaGastoUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetCategorias }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('ctl/categoria', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Categoría agregada exitosamente\");\r\n            GetCategorias();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('ctl/categoria', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetCategorias();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.categoriaId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.categoriaId > 0 ? 'Actualizar Categoría' : 'Nueva Categoría'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"nombre\">Nombre</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"nombre\"\r\n                                            id=\"nombre\"\r\n                                            required\r\n                                            value={values.nombre}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Nombre\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.categoriaId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                </Form.Row>\r\n                                <Form.Row className=\"align-items-center m-l-0\">\r\n                                    <Col />\r\n                                    <Col />\r\n                                    <Col className=\"text-right\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </Col>\r\n                                    <Col className=\"text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.categoriaId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nexport const SubCategoriaGastoUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetSubCategorias }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('ctl/subcategoria', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"SubCategoría agregada exitosamente\");\r\n            GetSubCategorias();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi('ctl/subcategoria', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetSubCategorias();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.sub_categoriaId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.sub_categoriaId > 0 ? 'Actualizar Sub Categoría' : 'Nueva Sub Categoría'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"nombre\">Nombre</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"nombre\"\r\n                                            id=\"nombre\"\r\n                                            required\r\n                                            value={values.nombre}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Nombre\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.sub_categoriaId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                </Form.Row>\r\n                                <Form.Row className=\"align-items-center m-l-0\">\r\n                                    <Col />\r\n                                    <Col />\r\n                                    <Col className=\"text-right\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </Col>\r\n                                    <Col className=\"text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.sub_categoriaId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Table } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { SubCategoriaGastoUpSert } from './SubCategoriaGastoUpSert';\r\nexport const SubCategoriaGastoListar = ({ itemCategoria, exit }) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [listSubCategorias, setListSubCategorias] = useState([]);\r\n  const [abrirModal, setAbrirModal] = useState(false);\r\n  const initData = {\r\n    sub_categoriaId: '',\r\n    categoriaId: itemCategoria.categoriaId,\r\n    nombre: '',\r\n    estadoId: 1\r\n  };\r\n  const [dataInicial, setdataInicial] = useState(initData);\r\n\r\n  const handleOpenModal = () => {\r\n    setAbrirModal(true);\r\n    setdataInicial(initData);\r\n  }\r\n  const handleEditar = (id) => {\r\n    const { sub_categoriaId, categoriaId, nombre, estadoId } = listSubCategorias.find(item => item.sub_categoriaId === id);\r\n    setdataInicial({\r\n      sub_categoriaId,\r\n      categoriaId,\r\n      nombre,\r\n      estadoId\r\n    });\r\n    setAbrirModal(true);\r\n  }\r\n  const handleDelete = (id) => {\r\n    const MySwal = withReactContent(Swal);\r\n    MySwal.fire({\r\n      title: 'Alerta?',\r\n      text: 'Esta seguro que desea eliminar el elemento',\r\n      type: 'warning',\r\n      showCloseButton: true,\r\n      showCancelButton: true\r\n    }).then(async (willDelete) => {\r\n      if (willDelete.value) {\r\n        let method = 'DELETE';\r\n        let response = await callApi(`ctl/subcategoria/${id}`, {\r\n          method\r\n        });\r\n        if (response) {\r\n          alert_exitoso(response);\r\n          let listActual = listSubCategorias.filter(item => item.sub_categoriaId !== id);\r\n          setListSubCategorias(listActual);\r\n        }\r\n      } else {\r\n        alert_warning('No se eliminó ningún elemento');\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  const GetSubCategorias = async () => {\r\n    setLoading(true);\r\n    let response = await callApi(`ctl/subcategoria?categoriaId=${itemCategoria.categoriaId}&estadoId=1;2`);\r\n    if (response) {\r\n      setListSubCategorias(response);\r\n    }\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    GetSubCategorias();\r\n  }, [itemCategoria]);\r\n\r\n  return (\r\n    <Aux>\r\n      <Row>\r\n        <Col xl={12} md={12}>\r\n          <Button\r\n            key=\"btnBack\"\r\n            variant=\"success\"\r\n            size=\"sm\"\r\n            onClick={(e) => exit()}>\r\n            <i className=\"feather icon-arrow-left\" />\r\n            Categorias\r\n          </Button>\r\n          <Card>\r\n            <Card.Header>\r\n              <h5>[{itemCategoria.nombre}] - Sub Categorias</h5>\r\n              <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" />Add</Button>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table responsive hover borderless>\r\n                <thead>\r\n                  <tr>\r\n                    <th>No.</th>\r\n                    <th>Nombre</th>\r\n                    <th style={{ textAlign: \"center\" }}>Estado</th>\r\n                    <th style={{ textAlign: \"center\" }}>Opciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    listSubCategorias && listSubCategorias.map((item, index) => {\r\n                      return (\r\n                        <tr key={`sub_categoriaId${item.sub_categoriaId}`}>\r\n                          <td>{index + 1}</td>\r\n                          <td>{item?.nombre}</td>\r\n                          <td style={{ textAlign: \"center\" }}>\r\n                            {\r\n                              item.estadoId === 1 ?\r\n                                <label className=\"badge badge-light-success\">{item?.Estado?.descripcion}</label>\r\n                                :\r\n                                <label className=\"badge badge-light-danger\">{item?.Estado?.descripcion}</label>\r\n                            }\r\n                          </td>\r\n                          <td style={{ textAlign: \"center\" }}>\r\n                            <a href={\"#\"} onClick={() => { handleEditar(item.sub_categoriaId) }}><i className=\"icon feather icon-edit f-w-600 f-16 m-r-15 text-c-green\" /></a>\r\n                            <a href={\"#\"} onClick={() => { handleDelete(item.sub_categoriaId) }}><i className=\"feather icon-trash-2 f-w-600 f-16 text-c-red\" /></a>\r\n                          </td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n                  }\r\n                </tbody>\r\n              </Table>\r\n            </Card.Body>\r\n            {\r\n              abrirModal === true &&\r\n              <SubCategoriaGastoUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} GetSubCategorias={GetSubCategorias} dataInicial={dataInicial} />\r\n            }\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Aux>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const PresupuestoDetalleUpSert = ({ dataInicial, abrirModal, setAbrirModal, handleAddItem, handleEditItem, listCategorias, listItemsDetalle }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false);\r\n    const [listCategoriasDisponibles, setListCategoriasDisponibles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let listDisponibles = [];\r\n        listCategorias.map((item) => {\r\n            let existe = listItemsDetalle.find(i => Number(i.categoriaId) === Number(item.categoriaId) && Number(i.categoriaId)!==Number(dataInicial.categoriaId) && Number(i.estadoId)!==3);\r\n            if (!existe) {\r\n                listDisponibles.push(item);\r\n            }\r\n        });\r\n        setListCategoriasDisponibles(listDisponibles);\r\n    }, []);\r\n\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (Number(values.monto) <= 0) {\r\n            alert_warning(\"El monto debe ser mayor a 0\");\r\n            return false;\r\n        }\r\n        let itemCategoria = listCategorias.find(i => Number(i.categoriaId) === Number(values.categoriaId));\r\n        let { nombre } = itemCategoria;\r\n        if (dataInicial.presupuesto_detalleId > 0 || String(dataInicial.id).trim().length > 0) {\r\n            let datos = values;\r\n            datos.nombre = nombre;\r\n            handleEditItem(values);\r\n        } else {\r\n            let datos = values;\r\n            datos.nombre = nombre;\r\n            datos.id = uuidv4();\r\n            handleAddItem(datos);\r\n            console.log(datos);\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.presupuesto_detalleId > 0 ? 'Actualizar' : 'Nuevo'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"categoriaId\">Categoría</Form.Label>\r\n                                        <SelectGroup\r\n                                            name=\"categoriaId\"\r\n                                            id=\"categoriaId\"\r\n                                            value={values.categoriaId}\r\n                                            required\r\n                                            errorMessage={errorMessage}\r\n                                            onChange={handleOnChange}>\r\n                                            <option value=\"\">--Seleccione--</option>\r\n                                            {\r\n                                                listCategoriasDisponibles && listCategoriasDisponibles.map(({ categoriaId, nombre }) => {\r\n                                                    return (\r\n                                                        <option value={categoriaId} key={`categoriaId${categoriaId}`}>{nombre}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </SelectGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"monto\">Monto</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"monto\"\r\n                                            id=\"monto\"\r\n                                            required\r\n                                            value={values.monto}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Monto\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            type=\"number\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.presupuesto_detalleId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                </Form.Row>\r\n                                <Form.Row className=\"align-items-center m-l-0\">\r\n                                    <Col />\r\n                                    <Col />\r\n                                    <Col className=\"text-right\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </Col>\r\n                                    <Col className=\"text-right\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.presupuesto_detalleId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </Col>\r\n                                </Form.Row>\r\n\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { Button, Card, Col, Form, Modal, Row, Table } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from './Loading';\r\nimport { PresupuestoDetalleUpSert } from './PresupuestoDetalleUpSert';\r\nconst initData = {\r\n    id: '',\r\n    presupuesto_detalleId: 0,\r\n    categoriaId: 0,\r\n    monto: 0,\r\n    estadoId: 1\r\n};\r\nexport const PresupuestoUpSert = ({ dataInicial, GetPresupuesto, handleCloseUpSert, listMeses, listCategorias,setUpSert }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false);\r\n    const [listAnios, setListAnios] = useState([]);\r\n    const [listMesesMostrar, setListMesesMostrar] = useState([]);\r\n    const [listItemsDetalle, setListItemsDetalle] = useState([]);\r\n    const [dataInicialItem, setDataInicialItem] = useState(initData);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n\r\n\r\n\r\n    const handleAddItem = (item) => {\r\n        console.log({'tipo':'Edit',item});\r\n        let itemsActuales=listItemsDetalle;\r\n        itemsActuales.push(item);\r\n        setListItemsDetalle(itemsActuales);\r\n    }\r\n\r\n    const handleDeleteItem = (item) => {\r\n        let nuevosItems = listItemsDetalle.filter(i => Number(i.presupuesto_detalleId) > 0 && Number(i.presupuesto_detalleId) !== Number(item.presupuesto_detalleId) || i.id !== item.id);\r\n        if (Number(item.presupuesto_detalleId) > 0) {\r\n            item.estadoId = 3;\r\n            nuevosItems.push(item);\r\n        }\r\n        setListItemsDetalle(nuevosItems);\r\n    }\r\n    const handleEditItem = (item) => {\r\n        let listItemsActuales = listItemsDetalle;\r\n        console.log({'tipo':'Edit',item,listItemsActuales});\r\n        let nuevosItems = listItemsActuales.map(fila => {\r\n            console.log({itemMap:fila});\r\n            if ((Number(fila.presupuesto_detalleId) === Number(item.presupuesto_detalleId) && Number(fila.presupuesto_detalleId)>0) || (String(fila.id) === String(item.id) && Number(item.presupuesto_detalleId)===0)) {\r\n                console.log(\"Entro\");\r\n                return item;\r\n            } else {\r\n                return fila;\r\n            }\r\n        });\r\n        setListItemsDetalle(nuevosItems);\r\n    }\r\n\r\n\r\n    const NuevoRegistro = async () => {\r\n        let datos=values;\r\n        datos.detalle=listItemsDetalle;\r\n        let response = await callApi('ctl/presupuesto', {\r\n            method: 'POST',\r\n            body: JSON.stringify(datos)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Presupuesto agregado exitosamente\");\r\n            GetPresupuesto();\r\n            setUpSert(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let datos=values;\r\n        datos.detalle=listItemsDetalle;\r\n        let response = await callApi('ctl/presupuesto', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(datos)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetPresupuesto();\r\n            setUpSert(false);\r\n        }\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.presupuestoId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n       \r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n\r\n    const handleOpenModal=()=>{\r\n        setAbrirModal(true);\r\n        setDataInicialItem(initData);\r\n    }\r\n\r\n    const handleEditar = (idDb, idClient) => {\r\n        if (Number(idDb) > 0) {\r\n            let datos = listItemsDetalle.find(i => Number(i.presupuesto_detalleId) === Number(idDb));\r\n            setDataInicialItem(datos);\r\n        } else {\r\n            let datos = listItemsDetalle.find(i => i.id === idClient);\r\n            setDataInicialItem(datos);\r\n        }\r\n        setAbrirModal(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (dataInicial?.Detalle) {\r\n            let items = dataInicial.Detalle.map(item => {\r\n                let { presupuesto_detalleId, categoriaId, monto, estadoId, Categoria: { nombre } } = item;\r\n                return {\r\n                    presupuesto_detalleId,\r\n                    categoriaId,\r\n                    monto,\r\n                    estadoId,\r\n                    nombre,\r\n                    id:''\r\n                }\r\n            });\r\n            setListItemsDetalle(items);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let anios = [];\r\n        let anioActual = new Date().getFullYear();\r\n        let mesActual = new Date().getMonth();\r\n        anios.push({\r\n            anio: anioActual\r\n        });\r\n        if (Number(mesActual) > 10) {\r\n            anios.push({\r\n                anio: Number(anioActual) + 1\r\n            });\r\n        }\r\n        let meses = listMeses.filter(i => Number(i.mesId) > Number(mesActual));\r\n        setListAnios(anios);\r\n        setListMesesMostrar(meses);\r\n    }, [])\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    const textTransform = 'capitalize';\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col xl={12} md={6}>\r\n                    <Button\r\n                        key=\"btnBack\"\r\n                        variant=\"success\"\r\n                        size=\"sm\"\r\n                        onClick={(e) => { handleCloseUpSert() }}>\r\n                        <i className=\"feather icon-arrow-left\" />\r\n                        Lista de Presupuesto\r\n                    </Button>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <h5>{dataInicial.presupuestoId > 0 ? 'Actualizar Presupuesto' : 'Nuevo Presupuesto'}</h5>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n\r\n                                    <Form.Group as={Col} md=\"6\">\r\n                                        <Form.Label htmlFor=\"anio\">Año</Form.Label>\r\n                                        <SelectGroup\r\n                                            name=\"anio\"\r\n                                            id=\"anio\"\r\n                                            value={values.anio}\r\n                                            required\r\n                                            errorMessage={errorMessage}\r\n                                            onChange={handleOnChange}>\r\n                                            <option value=\"\">--Seleccione--</option>\r\n                                            {\r\n                                                listAnios && listAnios.map(({ anio }) => {\r\n                                                    return (\r\n                                                        <option value={anio} key={`anio${anio}`}>{anio}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n\r\n                                        </SelectGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"6\">\r\n                                        <Form.Label htmlFor=\"mesId\">Año</Form.Label>\r\n                                        <SelectGroup\r\n                                            name=\"mesId\"\r\n                                            id=\"mesId\"\r\n                                            value={values.mesId}\r\n                                            required\r\n                                            errorMessage={errorMessage}\r\n                                            onChange={handleOnChange}>\r\n                                            <option value=\"\">--Seleccione--</option>\r\n                                            {\r\n                                                listMesesMostrar && listMesesMostrar.map(({ mesId, descripcion }) => {\r\n                                                    return (\r\n                                                        <option value={mesId} key={`mesId${mesId}`}>{descripcion}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n\r\n                                        </SelectGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">Descripción</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Descripción\"\r\n                                            autoComplete=\"off\"\r\n                                            style={{ textTransform: textTransform }}\r\n                                            type=\"text\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.categoriaId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                </Form.Row>\r\n                                <h6>Detalle</h6>\r\n                                <hr></hr>\r\n                                <Table responsive hover borderless>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>No.</th>\r\n                                            <th>Categoría</th>\r\n                                            <th style={{ textAlign: \"center\" }}>Monto</th>\r\n                                            <th style={{ textAlign: \"center\" }}>Estado</th>\r\n                                            <th style={{ textAlign: \"center\" }}>Opciones</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            listItemsDetalle && listItemsDetalle.map((item, index) => {\r\n                                                let { estadoId } = item;\r\n                                                console.log({render:true,item,estadoId});\r\n                                                if (Number(estadoId) !== 3) {\r\n                                                    return (\r\n                                                        <tr key={`detalleId${index}`}>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{item?.nombre}</td>\r\n                                                            <td style={{ textAlign: \"center\" }}>\r\n                                                                {item?.monto}\r\n                                                            </td>\r\n                                                            <td style={{ textAlign: \"center\" }}>\r\n                                                                {\r\n                                                                    Number(item.estadoId) === 1 ?\r\n                                                                        <label className=\"badge badge-light-success\">Activo</label>\r\n                                                                        :\r\n                                                                        <label className=\"badge badge-light-danger\">Inactivo</label>\r\n                                                                }\r\n                                                            </td>\r\n                                                            <td style={{ textAlign: \"center\" }}>\r\n                                                                <a href={\"#\"} onClick={() => { handleEditar(item.presupuesto_detalleId, item.id) }}><i className=\"icon feather icon-edit f-w-600 f-16 m-r-15 text-c-green\" /></a>\r\n                                                                <a href={\"#\"} onClick={() => { handleDeleteItem(item) }}><i className=\"feather icon-trash-2 f-w-600 f-16 text-c-red\" /></a>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                    <tfoot>\r\n                                        <tr>\r\n                                            <td style={{ textAlign: \"left\" }} colSpan=\"5\">\r\n                                                <a href={\"#\"} onClick={() => { handleOpenModal() }}><i className=\"feather icon-add f-w-600 f-16 text-c-red\" />Nuevo</a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tfoot>\r\n                                </Table>\r\n                                <Form.Row className=\"align-items-center m-l-0\">\r\n                                    <Col xl={9} md={12} />\r\n                                    <Col xl={3} md={12} className=\"text-right\">\r\n                                        <button type=\"button\" onClick={() => { handleCloseUpSert() }} className=\"btn btn-warning m-r-10\"> Cancelar</button>\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.presupuestoId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Card.Body>\r\n                        {\r\n                            abrirModal === true &&\r\n                            <PresupuestoDetalleUpSert\r\n                                abrirModal={abrirModal}\r\n                                setAbrirModal={setAbrirModal}\r\n                                dataInicial={dataInicialItem}\r\n                                handleAddItem={handleAddItem}\r\n                                handleEditItem={handleEditItem}\r\n                                listCategorias={listCategorias}\r\n                                listItemsDetalle={listItemsDetalle}\r\n                            />\r\n                        }\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Table } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { CategoriaGastoUpSert } from './CategoriaGastoUpSert';\r\nimport { SubCategoriaGastoListar } from './SubCategoriaGastoListar';\r\nimport { PresupuestoUpSert } from './PresupuestoUpSert';\r\nexport const PresupuestoListar = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [upSert, setUpSert] = useState(false);\r\n  const [listPresupuesto, setListPrespuesto] = useState([]);\r\n  const [listMeses, setListMeses] = useState([]);\r\n  const [listCategorias,setListCategorias]=useState([]);\r\n  const [abrirModal, setAbrirModal] = useState(false);\r\n  const [subCategoriaComponent, setSubCategoriaComponent] = useState(false);\r\n  const [itempresupuestoIdShow, setItempresupuestoIdShow] = useState(0);\r\n  const initData = {\r\n    presupuestoId: '',\r\n    anio: '',\r\n    mesId:'',\r\n    descripcion:'',\r\n    estadoId: 1,\r\n    detalle:[]\r\n  };\r\n  console.log({listPresupuesto});\r\n  const [dataInicial, setdataInicial] = useState(initData);\r\n\r\n  const handleCloseUpSert=()=>{\r\n    setUpSert(false);\r\n  }\r\n  const handleOpenModal = () => {\r\n    setAbrirModal(true);\r\n    setdataInicial(initData);\r\n  }\r\n  const handleEditar = (id) => {\r\n    const { presupuestoId,anio,descripcion, mesId, estadoId,Detalle } = listPresupuesto.find(item => item.presupuestoId === id);\r\n    setdataInicial({\r\n      presupuestoId,\r\n      anio,\r\n      descripcion,\r\n      mesId,\r\n      estadoId,\r\n      Detalle\r\n    });\r\n    setUpSert(true);\r\n  }\r\n  const handleDelete = (id) => {\r\n    const MySwal = withReactContent(Swal);\r\n    MySwal.fire({\r\n      title: 'Alerta?',\r\n      text: 'Esta seguro que desea eliminar el elemento',\r\n      type: 'warning',\r\n      showCloseButton: true,\r\n      showCancelButton: true\r\n    }).then(async (willDelete) => {\r\n      if (willDelete.value) {\r\n        let method = 'DELETE';\r\n        let response = await callApi(`ctl/categoria/${id}`, {\r\n          method\r\n        });\r\n        if (response) {\r\n          alert_exitoso(response);\r\n          let listActual = listPresupuesto.filter(item => item.presupuestoId !== id);\r\n          setListPrespuesto(listActual);\r\n        }\r\n      } else {\r\n        alert_warning('No se eliminó ningún elemento');\r\n      }\r\n    });\r\n  }\r\n\r\n   const GetPresupuesto = async () => {\r\n    setLoading(true);\r\n    let response = await callApi('ctl/presupuesto?estadoId=1;2');\r\n    if (response) {\r\n      setListPrespuesto(response);\r\n    }\r\n    setLoading(false);\r\n  }\r\n  const GetMeses = async () => {\r\n    setLoading(true);\r\n    let response = await callApi('ctl/catalogo/mes');\r\n    if (response) {\r\n      setListMeses(response);\r\n    }\r\n    setLoading(false);\r\n  }\r\n  const GetCategorias = async () => {\r\n    setLoading(true);\r\n    let response = await callApi('ctl/categoria?estadoId=1&include=0');\r\n    if (response) {\r\n      setListCategorias(response);\r\n    }\r\n    setLoading(false);\r\n  }\r\n  const handleNew=()=>{\r\n    setdataInicial(initData);\r\n    setUpSert(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    GetPresupuesto();\r\n    GetMeses();\r\n    GetCategorias();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !upSert ?\r\n          <Aux>\r\n            <Row>\r\n              <Col xl={12} md={6}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h5>Presupuesto</h5>\r\n                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={()=>{handleNew()}}><i className=\"feather icon-plus\" />Add</Button>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Table responsive hover borderless>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>No.</th>\r\n                          <th>Descripción</th>\r\n                          <th style={{ textAlign: \"center\" }}>Año</th>\r\n                          <th style={{ textAlign: \"center\" }}>Mes</th>\r\n                          <th style={{ textAlign: \"center\" }}>Estado</th>\r\n                          <th style={{ textAlign: \"center\" }}>Opciones</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {\r\n                          listPresupuesto && listPresupuesto.map((item, index) => {\r\n                            return (\r\n                              <tr key={`presupuestoId${item.presupuestoId}`}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item?.descripcion}</td>\r\n                                <td style={{ textAlign: \"center\" }}>{item.anio}</td>\r\n                                <td style={{ textAlign: \"center\" }}>{item?.Mes?.descripcion}</td>\r\n                                <td style={{ textAlign: \"center\" }}>\r\n                                  {\r\n                                    item.estadoId === 1 ?\r\n                                      <label className=\"badge badge-light-success\">{item?.Estado?.descripcion}</label>\r\n                                      :\r\n                                      <label className=\"badge badge-light-danger\">{item?.Estado?.descripcion}</label>\r\n                                  }\r\n                                </td>\r\n                                <td style={{ textAlign: \"center\" }}>\r\n                                  <a href={\"#\"} onClick={() => { handleEditar(item.presupuestoId) }}><i className=\"icon feather icon-edit f-w-600 f-16 m-r-15 text-c-green\" /></a>\r\n                                  <a href={\"#\"} onClick={() => { handleDelete(item.presupuestoId) }}><i className=\"feather icon-trash-2 f-w-600 f-16 text-c-red\" /></a>\r\n                                </td>\r\n                              </tr>\r\n                            )\r\n                          })\r\n                        }\r\n                      </tbody>\r\n                    </Table>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Aux>\r\n          : <PresupuestoUpSert\r\n          setUpSert={setUpSert}\r\n            dataInicial={dataInicial} \r\n            handleCloseUpSert={handleCloseUpSert}\r\n            GetPresupuesto={GetPresupuesto}\r\n            listMeses={listMeses}\r\n            listCategorias={listCategorias}\r\n            />\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { PresupuestoListar } from '../components/base/PresupuestoListar'\r\n\r\nconst PresupuestoPage = () => {\r\n    return (\r\n        <PresupuestoListar />\r\n    )\r\n}\r\n\r\nexport default PresupuestoPage;"],"sourceRoot":""}