{"version":3,"sources":["App/components/contable/GrupoContableListar.js","App/pages/contable/GrupoContablePage.js","App/components/base/NoAutorizado.js"],"names":["GrupoContableListar","useState","loading","setLoading","state","useSelector","accesos","setAccesos","catGrupoContable","setCatGrupoContable","catCuentasContables","setCatCuentasContables","dataArbol","setDataArbol","armarArbol","setArmarArbol","treeviewRef","useRef","GetCuentas","grupo_contableId","cuentasAux","gruposAux","filter","i","Number","padre_grupo_contableId","cuentas","map","cuenta_contableId","codigo","nombre","push","id","text","isLeaf","descripcion","children","GetGrupoContable","a","find","acceso","menuId","accesoId","callApi","responseGrupo","GetCuentasContables","response","useEffect","misAccesos","item","GetAccesosByMenuId","padres","listArbol","armarDatArbol","length","Row","className","Col","sm","Card","Header","Title","as","Body","Loading","ref","items","theme","showRoot","showCheckbox","marginItems","selectRow","NoAutorizado","GrupoContablePage","variant","Heading"],"mappings":"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","file":"static/js/39.de11e9b9.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport TreeView from 'deni-react-treeview';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport Loading from '../base/Loading'\r\nimport Aux from '../../../hoc/_Aux';\r\nimport { Card, Row } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { NoAutorizado } from '../base/NoAutorizado';\r\nconst menuId = 40;\r\nconst menuIdCuentaContable = 41;\r\nexport const GrupoContableListar = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const state = useSelector(state => state);\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [catGrupoContable, setCatGrupoContable] = useState([]);\r\n    const [catCuentasContables, setCatCuentasContables] = useState([]);\r\n    const [dataArbol, setDataArbol] = useState([]);\r\n    const [armarArbol, setArmarArbol] = useState(false);\r\n    const treeviewRef = useRef(null);\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId || item.menuId === menuIdCuentaContable);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const GetCuentas = (grupo_contableId) => {\r\n        let cuentasAux = [];\r\n        let gruposAux = [];\r\n        cuentasAux = catCuentasContables.filter(i => Number(i.grupo_contableId) === Number(grupo_contableId));\r\n        gruposAux = catGrupoContable.filter(i => Number(i.padre_grupo_contableId) === Number(grupo_contableId));\r\n\r\n        if (cuentasAux) {\r\n            let cuentas = [];\r\n            cuentasAux.map(({ cuenta_contableId, codigo, nombre }) => {\r\n                cuentas.push({\r\n                    id: cuenta_contableId,\r\n                    text: `${codigo} - ${nombre}`,\r\n                    isLeaf: true\r\n                });\r\n            });\r\n\r\n            gruposAux.map(({ grupo_contableId, codigo, descripcion, padre_grupo_contableId }) => {\r\n                cuentas.push({\r\n                    id: codigo,\r\n                    text: `${codigo} - ${descripcion}`,\r\n                    children: GetCuentas(grupo_contableId)\r\n                });\r\n            });\r\n\r\n            return cuentas;\r\n        }\r\n\r\n    }\r\n\r\n    const armarDatArbol = () => {\r\n        let padres = [];\r\n        padres = catGrupoContable.filter(i => i.padre_grupo_contableId === null)\r\n\r\n        let listArbol = [];\r\n        if (padres) {\r\n            padres.map(({ grupo_contableId, codigo, descripcion, padre_grupo_contableId }) => {\r\n                listArbol.push({\r\n                    id: codigo,\r\n                    text: `${codigo} - ${descripcion}`,\r\n                    children: GetCuentas(grupo_contableId)\r\n                });\r\n            });\r\n        }\r\n        setDataArbol(listArbol);\r\n    }\r\n    const GetGrupoContable = async () => {\r\n        if (accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let responseGrupo = await callApi(`grupocontable?include=0&estadoId=1`);\r\n            if (responseGrupo) {\r\n                setCatGrupoContable(responseGrupo);\r\n                GetCuentasContables();\r\n            }\r\n            setLoading(false);\r\n        } else {\r\n            setCatGrupoContable([{ nombre: 'No esta autorizado' }]);\r\n        }\r\n    }\r\n\r\n    const GetCuentasContables = async () => {\r\n        if (accesos.find(acceso => acceso.menuId === menuIdCuentaContable && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            let response = await callApi(`cuentacontable?include=0&estado=1`);\r\n            if (response) {\r\n                setCatCuentasContables(response);\r\n                setArmarArbol(true);\r\n            }\r\n            setLoading(false);\r\n        } else {\r\n            setCatCuentasContables([{ nombre: 'No esta autorizado' }]);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        GetGrupoContable();\r\n    }, [accesos]);\r\n\r\n    // useEffect(() => {\r\n    //     GetCuentasContables();\r\n    // }, [catGrupoContable]);\r\n\r\n\r\n    useEffect(() => {\r\n        armarDatArbol();\r\n    }, [armarArbol])\r\n\r\n\r\n    return (\r\n        accesos.length > 0 &&\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Arbol de Cuentas</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : accesos.find(i => i.accesoId === 3) ?\r\n                                        <TreeView\r\n                                            ref={treeviewRef}\r\n                                            className=\"customizable-tree\"\r\n                                            items={dataArbol}\r\n                                            theme=\"orange\"\r\n                                            showRoot={false}\r\n                                            showCheckbox={false}\r\n                                            marginItems=\"40\"\r\n                                            selectRow={true}\r\n                                        /> : <NoAutorizado />\r\n\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { GrupoContableListar } from '../../components/contable/GrupoContableListar'\r\n\r\nconst GrupoContablePage = () => {\r\n    return (\r\n        <GrupoContableListar/>\r\n    )\r\n}\r\n\r\nexport default GrupoContablePage\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n"],"sourceRoot":""}