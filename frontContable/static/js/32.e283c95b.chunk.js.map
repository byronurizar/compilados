{"version":3,"sources":["App/components/contable/TipoProductoUpSert.js","App/components/contable/TipoProductoListar.js","App/pages/contable/TipoProductoPage.js","App/components/base/NoAutorizado.js","helpers/estiloTabla.js"],"names":["TipoProductoUpSert","dataInicial","abrirModal","setAbrirModal","GetListado","useForm","values","handleOnChange","useState","loading","setLoading","NuevoRegistro","a","callApi","method","body","JSON","stringify","alert_exitoso","ActualizarRegistro","tipo_productoId","response","handleOnSubmit","e","preventDefault","Modal","show","onHide","Loading","Header","closeButton","Title","as","Body","onSubmit","onErrorSubmit","formData","errorInputs","alert_warning","Form","Row","Group","Col","md","Label","htmlFor","name","id","multiline","required","value","descripcion","onChange","errorMessage","placeholder","autoComplete","type","estadoId","className","onClick","TipoProductoListar","state","useSelector","accesos","setAccesos","tipoProducto","setTipoProducto","initData","setdataInicial","find","acceso","accesoId","limpiarEstiloTabla","asignarEstiloTabla","useEffect","misAccesos","filter","item","menuId","GetAccesosByMenuId","length","sm","Card","Button","variant","Table","striped","hover","responsive","bordered","map","estado","Estado","key","style","textAlign","handleEditar","withReactContent","Swal","fire","title","text","showCloseButton","showCancelButton","then","willDelete","listActual","NoAutorizado","TipoProductoPage","Heading","$","DataTable","require","selector","filas","setTimeout","destroy","searching","bLengthChange","bAutoWidth","lengthMenu","displayLength","language","processing","search","info","infoEmpty","infoFiltered","infoPostFix","loadingRecords","zeroRecords","emptyTable","paginate","first","previous","next","last","aria","sortAscending","sortDescending"],"mappings":"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","file":"static/js/32.e283c95b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Col, Form, Modal } from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, SelectGroup } from 'react-bootstrap4-form-validation';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Loading from '../base/Loading';\r\nexport const TipoProductoUpSert = ({ dataInicial, abrirModal, setAbrirModal, GetListado }) => {\r\n    const [values, handleOnChange] = useForm(dataInicial);\r\n    const [loading, setLoading] = useState(false)\r\n    const NuevoRegistro = async () => {\r\n        let response = await callApi('tipoproducto', {\r\n            method: 'POST',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(\"Tipo de producto registro exitosamente\");\r\n            GetListado();\r\n            setAbrirModal(false);\r\n        }\r\n    }\r\n    const ActualizarRegistro = async () => {\r\n        let response = await callApi(`tipoproducto/${dataInicial.tipo_productoId}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(values)\r\n        });\r\n\r\n        if (response) {\r\n            alert_exitoso(response);\r\n            GetListado();\r\n        }\r\n        setAbrirModal(false);\r\n    }\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (dataInicial.tipo_productoId > 0) {\r\n            await ActualizarRegistro();\r\n        } else {\r\n            await NuevoRegistro();\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleErrorSubmit = (e, formData, errorInputs) => {\r\n        alert_warning(\"Por favor complete toda la información solicitada por el formulario\");\r\n    };\r\n\r\n    const errorMessage = \"Campo obligatorio\";\r\n    return (\r\n        <Modal show={abrirModal} onHide={() => setAbrirModal(false)}>\r\n            {\r\n                loading === true ?\r\n                    <Loading />\r\n                    : <>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title as=\"h5\">{dataInicial.tipo_productoId > 0 ? 'Actualizar Tipo de Producto' : 'Nuevo Tipo de Producto'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <ValidationForm onSubmit={handleOnSubmit} onErrorSubmit={handleErrorSubmit}>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} md=\"12\">\r\n                                        <Form.Label htmlFor=\"descripcion\">Descripción</Form.Label>\r\n                                        <TextInput\r\n                                            name=\"descripcion\"\r\n                                            id=\"descripcion\"\r\n                                            multiline\r\n                                            required\r\n                                            value={values.descripcion}\r\n                                            onChange={handleOnChange}\r\n                                            errorMessage={errorMessage}\r\n                                            placeholder=\"Descripción\"\r\n                                            autoComplete=\"off\"\r\n                                            type=\"text\"\r\n                                        \r\n                                        />\r\n                                    </Form.Group>\r\n                                    {\r\n                                        dataInicial.tipo_productoId > 0 &&\r\n                                        <Form.Group as={Col} md=\"12\">\r\n                                            <Form.Label htmlFor=\"estadoId\">Estado</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"estadoId\"\r\n                                                id=\"estadoId\"\r\n                                                value={values.estadoId}\r\n                                                required\r\n                                                errorMessage={errorMessage}\r\n                                                onChange={handleOnChange}>\r\n                                                <option value=\"\">Seleccione un estado</option>\r\n                                                <option value=\"1\">Activo</option>\r\n                                                <option value=\"2\">Inactivo</option>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                    }\r\n                                    <div className=\"col-sm-3\"></div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"button\" onClick={() => { setAbrirModal(false) }} className=\"btn btn-warning\"> Cancelar</button>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <button type=\"submit\" className=\"btn btn-success\"> {dataInicial.tipo_productoId > 0 ? 'Actualizar' : 'Registrar'}</button>\r\n                                    </div>\r\n                                </Form.Row>\r\n                            </ValidationForm>\r\n                        </Modal.Body>\r\n                    </>\r\n            }\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector } from 'react-redux';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { alert_exitoso, alert_warning } from '../../../helpers/Notificacion';\r\nimport { NoAutorizado } from '../base/NoAutorizado';\r\nimport Loading from '../base/Loading';\r\nimport { asignarEstiloTabla, limpiarEstiloTabla } from '../../../helpers/estiloTabla';\r\nimport { TipoProductoUpSert } from './TipoProductoUpSert';\r\nconst menuId = 35;\r\nexport const TipoProductoListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [abrirModal, setAbrirModal] = useState(false);\r\n\r\n    const [tipoProducto, setTipoProducto] = useState([]);\r\n    const initData = {\r\n        tipo_productoId: '',\r\n        descripcion: '',\r\n        estadoId: 1\r\n    };\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => item.menuId === menuId);\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const [dataInicial, setdataInicial] = useState(initData);\r\n    const handleOpenModal = () => {\r\n        setAbrirModal(true);\r\n        setdataInicial(initData);\r\n    }\r\n    const GetListado = async () => {\r\n        if (accesos.find(acceso => acceso.accesoId === 3)) {\r\n            limpiarEstiloTabla(\"#tableTipoProducto\");\r\n            setLoading(true);\r\n            let response = await callApi('tipoproducto?estadoId=1;2');\r\n            if (response) {\r\n                setTipoProducto(response);\r\n            }\r\n            asignarEstiloTabla(\"#tableTipoProducto\");\r\n\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const handleEditar = (id) => {\r\n        const { tipo_productoId, descripcion, estadoId } = tipoProducto.find(item => item.tipo_productoId === id);\r\n        setdataInicial({\r\n            tipo_productoId,\r\n            descripcion,\r\n            estadoId\r\n        });\r\n        setAbrirModal(true);\r\n    }\r\n    const handleDelete = (id) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Alerta?',\r\n            text: 'Esta seguro que desea eliminar el elemento',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then(async (willDelete) => {\r\n            if (willDelete.value) {\r\n                let method = 'DELETE';\r\n                let response = await callApi(`tipoproducto/${id}`, {\r\n                    method\r\n                });\r\n                if (response) {\r\n                    alert_exitoso(response);\r\n                    let listActual = tipoProducto.filter(item => item.tipo_productoId !== id);\r\n                    setTipoProducto(listActual);\r\n                }\r\n            } else {\r\n                alert_warning('No se eliminó ningún elemento');\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, [state?.accesos]);\r\n\r\n    useEffect(() => {\r\n        GetListado();\r\n    }, [accesos]);\r\n    return (\r\n        accesos.length > 0 &&\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Tipos de Productos</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        <Row className=\"align-items-center m-l-0\">\r\n                                            <Col />\r\n                                            <Col className=\"text-right\">\r\n                                                {\r\n                                                    accesos.find(acceso => acceso.accesoId === 1) &&\r\n                                                    <Button variant=\"success\" className=\"btn-sm btn-round has-ripple\" onClick={handleOpenModal}><i className=\"feather icon-plus\" /> Agregar Nuevo</Button>\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"tableTipoProducto\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Codigo</th>\r\n                                                            <th>Descripción</th>\r\n                                                            <th>Estado</th>\r\n                                                            {\r\n                                                                accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                <th></th>\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            tipoProducto.map(({ tipo_productoId, descripcion, Estado: { descripcion: estado } }) => (\r\n                                                                <tr key={tipo_productoId}>\r\n                                                                    <td>{tipo_productoId}</td>\r\n                                                                    <td>{descripcion}</td>\r\n                                                                    <td>{estado}</td>\r\n                                                                    {\r\n                                                                        accesos.find(acceso => acceso.accesoId === 2 || acceso.accesoId === 4) &&\r\n                                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 2) &&\r\n                                                                                <button className=\"btn-icon btn btn-info btn-sm\" onClick={() => { handleEditar(tipo_productoId) }}><i className=\"feather icon-edit\" /></button>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                accesos.find(acceso => acceso.accesoId === 4) &&\r\n                                                                                <button className=\"btn-icon btn btn-danger btn-sm\" onClick={() => { handleDelete(tipo_productoId) }}><i className=\"feather icon-trash-2\" /></button>\r\n                                                                            }\r\n                                                                        </td>\r\n                                                                    }\r\n                                                                </tr>\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                            {\r\n                                abrirModal === true &&\r\n                                <TipoProductoUpSert abrirModal={abrirModal} setAbrirModal={setAbrirModal} GetListado={GetListado} dataInicial={dataInicial} />\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { TipoProductoListar } from '../../components/contable/TipoProductoListar';\r\n\r\nconst TipoProductoPage = () => {\r\n    return (\r\n        <TipoProductoListar/>\r\n    )\r\n}\r\n\r\nexport default TipoProductoPage;\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n","import $ from 'jquery';\r\n$.DataTable = require('datatables.net-bs');\r\nrequire('datatables.net-responsive-bs');\r\n\r\nexport const asignarEstiloTabla = (selector, filas = 10) => {\r\n    setTimeout(() => {\r\n        $(selector).DataTable().destroy();\r\n        $(selector).DataTable({\r\n            searching: true,\r\n            bLengthChange: false,\r\n            bAutoWidth: false,\r\n            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, \"Todos\"]],\r\n            displayLength: filas,\r\n            language: {\r\n                processing: \"Cargando información\",\r\n                search: \"Filtrar por:\",\r\n                lengthMenu: \"Mostrar _MENU_ filas\",\r\n                info: \"Vizualización  _END_ de _TOTAL_ filas\",\r\n                infoEmpty: \"Vizualización del elemento 0 a 0 de 0 filas\",\r\n                infoFiltered: \"(Filtrado de _MAX_ filas en total)\",\r\n                infoPostFix: \"\",\r\n                loadingRecords: \"Cargando...\",\r\n                zeroRecords: \"No se logró encontrar ninguna coincidencia\",\r\n                emptyTable: \"No existen registros\",\r\n                paginate: {\r\n                    first: \"Primera\",\r\n                    previous: \"Anterior\",\r\n                    next: \"Siguiente\",\r\n                    last: \"Ultima\"\r\n                },\r\n                aria: {\r\n                    sortAscending: \": active para ordenar la columna en orden ascendente\",\r\n                    sortDescending: \": active para ordenar la columna en orden descendente\"\r\n                }\r\n            }\r\n        });\r\n    }, 0);\r\n}\r\nexport const limpiarEstiloTabla = (selector) => {\r\n    $(selector).DataTable().destroy();\r\n}"],"sourceRoot":""}