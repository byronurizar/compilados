{"version":3,"sources":["App/components/base/BitacoraCambiosListar.js","App/pages/BitacoraCambiosPage.js","App/components/base/NoAutorizado.js","helpers/estiloTabla.js"],"names":["BitacoraCambiosListar","state","useSelector","useState","loading","setLoading","accesos","setAccesos","tablas","setTablas","peticiones","setCambios","fechaInicial","setFechaInicial","fechaFinal","setFechaFinal","usuarios","setUsuarios","useForm","tabla","usuarioId","values","setValues","GetUsuarios","a","listUsuario","find","acceso","menuId","accesoId","push","value","label","callApi","response","map","user_name","GetTablas","lista","item","Object","keys","nombre","valueAux","Cambios","limpiarEstiloTabla","method","body","JSON","stringify","asignarEstiloTabla","useEffect","misAccesos","filter","GetAccesosByMenuId","Row","className","Col","sm","Card","Header","Title","as","Body","onSubmit","e","preventDefault","Form","Group","md","Label","htmlFor","id","name","classNamePrefix","required","placeholder","onChange","options","dateFormat","selected","fecha","fechaFormat","moment","format","placeholderText","autoComplete","maxDate","Date","type","Loading","Table","striped","hover","responsive","bordered","bitacora_cambiosId","campo","modificadoId","tipo_dato","valor_anterior","valor_nuevo","Usuario","fecha_crea","nombreUsuario","key","NoAutorizado","BitacoraPeticionesPage","variant","Heading","$","DataTable","require","selector","filas","setTimeout","destroy","searching","bLengthChange","bAutoWidth","lengthMenu","displayLength","language","processing","search","info","infoEmpty","infoFiltered","infoPostFix","loadingRecords","zeroRecords","emptyTable","paginate","first","previous","next","last","aria","sortAscending","sortDescending"],"mappings":"6TAeaA,EAAwB,WACjC,IAAMC,EAAQC,aAAY,SAAAD,GAAK,OAAIA,KADI,EAETE,oBAAS,GAFA,mBAEhCC,EAFgC,KAEvBC,EAFuB,OAGTF,mBAAS,IAHA,mBAGhCG,EAHgC,KAGvBC,EAHuB,OAIXJ,mBAAS,IAJE,mBAIhCK,EAJgC,KAIxBC,EAJwB,OAKNN,mBAAS,IALH,mBAKhCO,EALgC,KAKpBC,EALoB,OAMCR,mBAAS,IANV,mBAMhCS,EANgC,KAMlBC,EANkB,OAOHV,mBAAS,IAPN,mBAOhCW,EAPgC,KAOpBC,EAPoB,OAQPZ,mBAAS,IARF,mBAQhCa,EARgC,KAQtBC,EARsB,OASPC,YAAQ,CACpCC,MAAO,GACPC,UAAW,GACXR,aAAc,GACdE,WAAY,KAbuB,mBAShCO,EATgC,KASpBC,GAToB,KAwBjCC,GAAW,uCAAG,8BAAAC,EAAA,yDACZC,EAAc,IACdnB,EAAQoB,MAAK,SAAAC,GAAM,OA3BT,KA2BaA,EAAOC,QAAgD,IAApBD,EAAOE,YAFrD,wBAGZxB,GAAW,GACXoB,EAAYK,KAAK,CACbC,MAAO,IACPC,MAAO,UANC,SAQSC,YAAQ,gCARjB,QAQRC,EARQ,SAURA,EAASC,KAAI,YAA+B,IAA5Bf,EAA2B,EAA3BA,UAAWgB,EAAgB,EAAhBA,UACvBX,EAAYK,KAAK,CACbC,MAAOX,EACPY,MAAOI,OAbP,wBAmBZX,EAAYK,KAAK,CACbC,MAAO,KACPC,MAAO,kBArBC,QAwBhBf,EAAYQ,GACZpB,GAAW,GAzBK,4CAAH,qDA2BXgC,GAAS,uCAAG,8BAAAb,EAAA,yDACVc,EAAQ,IACRhC,EAAQoB,MAAK,SAAAC,GAAM,OAvDhB,KAuDoBA,EAAOC,QAAyC,IAApBD,EAAOE,YAFhD,wBAGVxB,GAAW,GACXiC,EAAMR,KAAK,CACPC,MAAO,GACPC,MAAO,UAND,SAQWC,YAAQ,2BARnB,QAQNC,EARM,SAUNA,EAASC,KAAI,SAACI,GAAU,IAAD,EACJC,OAAOC,KAAKF,GAAtBG,EADc,oBAEfC,EAAWJ,EAAK,GAAD,OAAIG,IACvBJ,EAAMR,KAAK,CACPC,MAAOY,EACPX,MAAOW,OAfT,wBAqBVL,EAAMR,KAAK,CACPC,MAAO,KACPC,MAAO,kBAvBD,QA0BdvB,EAAU6B,GACVjC,GAAW,GA3BG,4CAAH,qDA8BTuC,GAAO,uCAAG,4BAAApB,EAAA,0DACRlB,EAAQoB,MAAK,SAAAC,GAAM,OApFhB,KAoFoBA,EAAOC,QAAyC,IAApBD,EAAOE,YADlD,uBAERxB,GAAW,GACXwC,YAAmB,YAHX,SAIaZ,YAAQ,mBAAoB,CAC7Ca,OAAQ,OACRC,KAAMC,KAAKC,UAAU5B,KANjB,QAIJa,EAJI,SASJvB,EAAWuB,GAEf7B,GAAW,GACX6C,YAAmB,WAAY,IAZvB,2CAAH,qDA8Cb,OATAC,qBAAU,YAtGiB,WACvB,UAAIlD,QAAJ,IAAIA,OAAJ,EAAIA,EAAOK,QAAS,CAAC,IAEX8C,EADcnD,EAAZK,QACmB+C,QAAO,SAAAd,GAAI,OArBnC,KAqBwCA,EAAKX,QApBtC,KAoB2DW,EAAKX,UAC1ErB,EAAW6C,GAEf/C,GAAW,GAiGXiD,KACD,IAEHH,qBAAU,WACNd,KACAd,OACD,CAACjB,IAGA,kBAAC,IAAD,KACI,kBAACiD,EAAA,EAAD,CAAKC,UAAU,YACX,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,kBAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,MAAf,uBAEJ,kBAACH,EAAA,EAAKI,KAAN,KAEI,kBAACR,EAAA,EAAD,CAAKC,UAAU,4BACX,kBAACC,EAAA,EAAD,KACI,kBAAC,iBAAD,CAAgBO,SApCzB,SAACC,GACpBA,EAAEC,iBACFtB,OAmCgC,kBAACuB,EAAA,EAAKZ,IAAN,KACI,kBAACY,EAAA,EAAKC,MAAN,CAAYN,GAAIL,IAAKY,GAAG,KACpB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,SAApB,SACA,kBAAC,IAAD,CACIC,GAAG,QACHC,KAAK,QACLjB,UAAU,eACVkB,gBAAgB,SAChBC,UAAQ,EACRC,YAAY,QACZC,SAlDtB,SAAC,GAAe,IAAb9C,EAAY,EAAZA,MACzBT,GAAU,eAAKD,EAAN,CAAcF,MAAOY,MAkDc+C,QAAStE,KAGjB,kBAAC2D,EAAA,EAAKC,MAAN,CAAYN,GAAIL,IAAKY,GAAG,KACpB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,aAApB,WACA,kBAAC,IAAD,CACIC,GAAG,YACHC,KAAK,YACLjB,UAAU,eACVkB,gBAAgB,SAChBC,UAAQ,EACRC,YAAY,UACZC,SAlEpB,SAAC,GAAe,IAAb9C,EAAY,EAAZA,MAC3BT,GAAU,eAAKD,EAAN,CAAcD,UAAWW,MAkEU+C,QAAS9D,MAIrB,kBAACmD,EAAA,EAAKZ,IAAN,KACI,kBAACY,EAAA,EAAKC,MAAN,CAAYN,GAAIL,IAAKY,GAAG,KACpB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,gBAApB,iBACA,yBAAKf,UAAU,cACX,kBAAC,IAAD,CACIgB,GAAG,eACHC,KAAK,eACLM,WAAW,aACXC,SAAUpE,EACViE,SArExB,SAACI,GACzB,IAAMC,EAAcC,IAAOF,GAAOG,OAAO,cACzC9D,GAAU,eAAKD,EAAN,CAAcT,aAAcsE,KACrCrE,EAAgBoE,IAmEgCzB,UAAU,eACV6B,gBAAgB,aAChBC,aAAa,MACbC,QAAS,IAAIC,SAIzB,kBAACrB,EAAA,EAAKC,MAAN,CAAYN,GAAIL,IAAKY,GAAG,KACpB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,cAApB,eACA,yBAAKf,UAAU,cACX,kBAAC,IAAD,CACIgB,GAAG,aACHC,KAAK,aACLM,WAAW,aACXC,SAAUlE,EACV+D,SAhFzB,SAACI,GACxB,IAAMC,EAAcC,IAAOF,GAAOG,OAAO,cACzC9D,GAAU,eAAKD,EAAN,CAAcP,WAAYoE,KACnCnE,EAAckE,IA8EkCzB,UAAU,eACV6B,gBAAgB,aAChBC,aAAa,MACbC,QAAS,IAAIC,SAIzB,kBAACrB,EAAA,EAAKC,MAAN,CAAYN,GAAIL,IAAKY,GAAG,KACpB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,UAApB,YACA,4BAAQf,UAAU,iCAAiCiC,KAAK,UAAxD,SAAuE,uBAAGjC,UAAU,8BAMxG,8BAEgB,IAAZpD,EACI,kBAACsF,EAAA,EAAD,MACE,oCAEMpF,EAAQoB,MAAK,SAAAC,GAAM,OAzNhD,KAyNoDA,EAAOC,QAAyC,IAApBD,EAAOE,YACtD,kBAAC8D,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,EAACC,UAAQ,EAACvB,GAAG,WACxC,+BACI,4BACI,sCACA,qCACA,qCACA,6CACA,4CACA,8CACA,2CACA,uCACA,uCAGR,+BAEQ9D,EAAWyB,KAAI,YAAsH,IAEpH,EAFC6D,EAAkH,EAAlHA,mBAAoB7E,EAA8F,EAA9FA,MAAO8E,EAAuF,EAAvFA,MAAOC,EAAgF,EAAhFA,aAAcC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,eAAgBC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC3GC,EAAgB,MAChBF,IACAE,EAAa,iBAAGF,QAAH,IAAGA,OAAH,EAAGA,EAASlE,iBAAZ,QAAyB,OAE1C,OACI,wBAAIqE,IAAKT,GACL,4BAAKA,GACL,4BAAK7E,GACL,4BAAK8E,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKG,GACL,4BAAKD,SAO3B,kBAACG,EAAA,EAAD,aCnQnCC,UARgB,WAC3B,OACI,6BACI,kBAAC,EAAD,S,gCCLZ,uFAGaD,EAAe,WACxB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,QAAQ,UACX,kBAAC,IAAMC,QAAP,CAAe/C,GAAG,MAAlB,mBACA,qFACA,6BACA,uBAAGN,UAAU,QAAb,4E,gCCZxB,yFACAsD,IAAEC,UAAYC,EAAQ,KACtBA,EAAQ,KAED,IAAM9D,EAAqB,SAAC+D,GAA0B,IAAhBC,EAAe,uDAAP,GACjDC,YAAW,WACPL,IAAEG,GAAUF,YAAYK,UACxBN,IAAEG,GAAUF,UAAU,CAClBM,WAAW,EACXC,eAAe,EACfC,YAAY,EACZC,WAAY,CAAC,CAAC,GAAI,GAAI,IAAK,GAAI,CAAC,GAAI,GAAI,GAAI,UAC5CC,cAAeP,EACfQ,SAAU,CACNC,WAAY,0BACZC,OAAQ,eACRJ,WAAY,uBACZK,KAAM,2CACNC,UAAW,iDACXC,aAAc,qCACdC,YAAa,GACbC,eAAgB,cAChBC,YAAa,gDACbC,WAAY,uBACZC,SAAU,CACNC,MAAO,UACPC,SAAU,WACVC,KAAM,YACNC,KAAM,UAEVC,KAAM,CACFC,cAAe,uDACfC,eAAgB,8DAI7B,IAEM9F,EAAqB,SAACoE,GAC/BH,IAAEG,GAAUF,YAAYK","file":"static/js/25.ef15fe9c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Form, Row, Col, Card, Table } from 'react-bootstrap';\r\nimport { ValidationForm } from 'react-bootstrap4-form-validation';\r\nimport Aux from '../../../hoc/_Aux';\r\nimport callApi from '../../../helpers/conectorApi';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { asignarEstiloTabla, limpiarEstiloTabla } from '../../../helpers/estiloTabla';\r\nimport { NoAutorizado } from './NoAutorizado';\r\nimport Loading from './Loading';\r\nconst menuId = 27;\r\nconst menuIdUsuario = 17;\r\nexport const BitacoraCambiosListar = () => {\r\n    const state = useSelector(state => state);\r\n    const [loading, setLoading] = useState(true)\r\n    const [accesos, setAccesos] = useState([]);\r\n    const [tablas, setTablas] = useState([]);\r\n    const [peticiones, setCambios] = useState([]);\r\n    const [fechaInicial, setFechaInicial] = useState('');\r\n    const [fechaFinal, setFechaFinal] = useState('');\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [values, , , setValues] = useForm({\r\n        tabla: '',\r\n        usuarioId: '',\r\n        fechaInicial: '',\r\n        fechaFinal: ''\r\n    });\r\n\r\n    const GetAccesosByMenuId = () => {\r\n        if (state?.accesos) {\r\n            const { accesos } = state;\r\n            const misAccesos = accesos.filter(item => (item.menuId === menuId || item.menuId === menuIdUsuario));\r\n            setAccesos(misAccesos);\r\n        }\r\n        setLoading(false);\r\n    }\r\n    const GetUsuarios = async () => {\r\n        let listUsuario = [];\r\n        if (accesos.find(acceso => acceso.menuId === menuIdUsuario && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            listUsuario.push({\r\n                value: \"0\",\r\n                label: \"Todos\",\r\n            })\r\n            let response = await callApi('usuario?estadoId=1&include=0');\r\n            if (response) {\r\n                response.map(({ usuarioId, user_name }) => {\r\n                    listUsuario.push({\r\n                        value: usuarioId,\r\n                        label: user_name,\r\n                    })\r\n                });\r\n\r\n            }\r\n        } else {\r\n            listUsuario.push({\r\n                value: \"-1\",\r\n                label: \"No Autorizado\",\r\n            })\r\n        }\r\n        setUsuarios(listUsuario);\r\n        setLoading(false);\r\n    }\r\n    const GetTablas = async () => {\r\n        let lista = [];\r\n        if (accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            lista.push({\r\n                value: \"\",\r\n                label: \"Todas\",\r\n            })\r\n            let response = await callApi('bitacora/cambios/tablas');\r\n            if (response) {\r\n                response.map((item) => {\r\n                    let [nombre] = Object.keys(item);\r\n                    let valueAux = item[`${nombre}`];\r\n                    lista.push({\r\n                        value: valueAux,\r\n                        label: valueAux\r\n                    });\r\n                });\r\n\r\n            }\r\n        } else {\r\n            lista.push({\r\n                value: \"-1\",\r\n                label: \"No Autorizado\",\r\n            })\r\n        }\r\n        setTablas(lista);\r\n        setLoading(false);\r\n    }\r\n\r\n    const Cambios = async () => {\r\n        if (accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3)) {\r\n            setLoading(true);\r\n            limpiarEstiloTabla(\"#mytable\");\r\n            let response = await callApi('bitacora/cambios', {\r\n                method: 'POST',\r\n                body: JSON.stringify(values)\r\n            });\r\n            if (response) {\r\n                setCambios(response);\r\n            }\r\n            setLoading(false);\r\n            asignarEstiloTabla(\"#mytable\", 25);\r\n        }\r\n    }\r\n\r\n    const handleChangeUsuario = ({ value }) => {\r\n        setValues({ ...values, usuarioId: value });\r\n    }\r\n    const handleChangeTabla = ({ value }) => {\r\n        setValues({ ...values, tabla: value });\r\n    }\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        Cambios();\r\n    }\r\n\r\n    const onchangeFechaIncial = (fecha) => {\r\n        const fechaFormat = moment(fecha).format('YYYY/MM/DD');\r\n        setValues({ ...values, fechaInicial: fechaFormat });\r\n        setFechaInicial(fecha);\r\n    }\r\n    const onchangeFechaFinal = (fecha) => {\r\n        const fechaFormat = moment(fecha).format('YYYY/MM/DD');\r\n        setValues({ ...values, fechaFinal: fechaFormat });\r\n        setFechaFinal(fecha);\r\n    }\r\n    useEffect(() => {\r\n        GetAccesosByMenuId();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        GetTablas();\r\n        GetUsuarios();\r\n    }, [accesos])\r\n\r\n    return (\r\n        <Aux>\r\n            <Row className='btn-page'>\r\n                <Col sm={12}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <Card.Title as=\"h5\">Listado de Cambios</Card.Title>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n\r\n                            <Row className=\"align-items-center m-l-0\">\r\n                                <Col>\r\n                                    <ValidationForm onSubmit={handleOnSubmit} >\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"6\">\r\n                                                <Form.Label htmlFor=\"tabla\">Tabla</Form.Label>\r\n                                                <Select\r\n                                                    id=\"tabla\"\r\n                                                    name=\"tabla\"\r\n                                                    className=\"basic-single\"\r\n                                                    classNamePrefix=\"select\"\r\n                                                    required\r\n                                                    placeholder=\"Tabla\"\r\n                                                    onChange={handleChangeTabla}\r\n                                                    options={tablas}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"6\">\r\n                                                <Form.Label htmlFor=\"usuarioId\">Usuario</Form.Label>\r\n                                                <Select\r\n                                                    id=\"usuarioId\"\r\n                                                    name=\"usuarioId\"\r\n                                                    className=\"basic-single\"\r\n                                                    classNamePrefix=\"select\"\r\n                                                    required\r\n                                                    placeholder=\"Usuario\"\r\n                                                    onChange={handleChangeUsuario}\r\n                                                    options={usuarios}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"3\">\r\n                                                <Form.Label htmlFor=\"fechaInicial\">Fecha Inicial</Form.Label>\r\n                                                <div className=\"form-group\">\r\n                                                    <DatePicker\r\n                                                        id=\"fechaInicial\"\r\n                                                        name=\"fechaInicial\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                        selected={fechaInicial}\r\n                                                        onChange={onchangeFechaIncial}\r\n                                                        className=\"form-control\"\r\n                                                        placeholderText=\"dd/MM/yyyy\"\r\n                                                        autoComplete=\"off\"\r\n                                                        maxDate={new Date()}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"3\">\r\n                                                <Form.Label htmlFor=\"fechaFinal\">Fecha Final</Form.Label>\r\n                                                <div className=\"form-group\">\r\n                                                    <DatePicker\r\n                                                        id=\"fechaFinal\"\r\n                                                        name=\"fechaFinal\"\r\n                                                        dateFormat=\"dd/MM/yyyy\"\r\n                                                        selected={fechaFinal}\r\n                                                        onChange={onchangeFechaFinal}\r\n                                                        className=\"form-control\"\r\n                                                        placeholderText=\"dd/MM/yyyy\"\r\n                                                        autoComplete=\"off\"\r\n                                                        maxDate={new Date()}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\">\r\n                                                <Form.Label htmlFor=\"status\">&nbsp;&nbsp;</Form.Label>\r\n                                                <button className=\"btn btn-block btn-primary mb-0\" type=\"submit\">Buscar<i className=\"feather icon-search\" /></button>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                    </ValidationForm>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr></hr>\r\n                            {\r\n                                loading === true ?\r\n                                    <Loading />\r\n                                    : <>\r\n                                        {\r\n                                            accesos.find(acceso => acceso.menuId === menuId && acceso.accesoId === 3) ?\r\n                                                <Table striped hover responsive bordered id=\"mytable\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Codigo</th>\r\n                                                            <th>Tabla</th>\r\n                                                            <th>Campo</th>\r\n                                                            <th>Id Modificado</th>\r\n                                                            <th>Tipo de Dato</th>\r\n                                                            <th>Valor Anterior</th>\r\n                                                            <th>Valor Nuevo</th>\r\n                                                            <th>Usuario</th>\r\n                                                            <th>Fecha</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            peticiones.map(({ bitacora_cambiosId, tabla, campo, modificadoId, tipo_dato, valor_anterior, valor_nuevo, Usuario, fecha_crea }) => {\r\n                                                                let nombreUsuario = \"N/A\";\r\n                                                                if (Usuario) {\r\n                                                                    nombreUsuario = Usuario?.user_name ?? \"N/A\";\r\n                                                                }\r\n                                                                return (\r\n                                                                    <tr key={bitacora_cambiosId}>\r\n                                                                        <td>{bitacora_cambiosId}</td>\r\n                                                                        <td>{tabla}</td>\r\n                                                                        <td>{campo}</td>\r\n                                                                        <td>{modificadoId}</td>\r\n                                                                        <td>{tipo_dato}</td>\r\n                                                                        <td>{valor_anterior}</td>\r\n                                                                        <td>{valor_nuevo}</td>\r\n                                                                        <td>{nombreUsuario}</td>\r\n                                                                        <td>{fecha_crea}</td>\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                : <NoAutorizado />\r\n                                        }\r\n                                    </>\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { BitacoraCambiosListar } from '../components/base/BitacoraCambiosListar'\r\nconst BitacoraPeticionesPage = () => {\r\n    return (\r\n        <div>\r\n            <BitacoraCambiosListar/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BitacoraPeticionesPage\r\n","import React from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/_Aux';\r\nexport const NoAutorizado = () => {\r\n    return (\r\n        <Aux>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"danger\">\r\n                        <Alert.Heading as=\"h4\">Información!</Alert.Heading>\r\n                        <p>No esta autorizado para poder visualizar los elementos</p>\r\n                        <hr />\r\n                        <p className=\"mb-0\">Comuniquese con el administrador para la asignación de permisos</p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Aux>\r\n    )\r\n}\r\n","import $ from 'jquery';\r\n$.DataTable = require('datatables.net-bs');\r\nrequire('datatables.net-responsive-bs');\r\n\r\nexport const asignarEstiloTabla = (selector, filas = 10) => {\r\n    setTimeout(() => {\r\n        $(selector).DataTable().destroy();\r\n        $(selector).DataTable({\r\n            searching: true,\r\n            bLengthChange: false,\r\n            bAutoWidth: false,\r\n            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, \"Todos\"]],\r\n            displayLength: filas,\r\n            language: {\r\n                processing: \"Cargando información\",\r\n                search: \"Filtrar por:\",\r\n                lengthMenu: \"Mostrar _MENU_ filas\",\r\n                info: \"Vizualización  _END_ de _TOTAL_ filas\",\r\n                infoEmpty: \"Vizualización del elemento 0 a 0 de 0 filas\",\r\n                infoFiltered: \"(Filtrado de _MAX_ filas en total)\",\r\n                infoPostFix: \"\",\r\n                loadingRecords: \"Cargando...\",\r\n                zeroRecords: \"No se logró encontrar ninguna coincidencia\",\r\n                emptyTable: \"No existen registros\",\r\n                paginate: {\r\n                    first: \"Primera\",\r\n                    previous: \"Anterior\",\r\n                    next: \"Siguiente\",\r\n                    last: \"Ultima\"\r\n                },\r\n                aria: {\r\n                    sortAscending: \": active para ordenar la columna en orden ascendente\",\r\n                    sortDescending: \": active para ordenar la columna en orden descendente\"\r\n                }\r\n            }\r\n        });\r\n    }, 0);\r\n}\r\nexport const limpiarEstiloTabla = (selector) => {\r\n    $(selector).DataTable().destroy();\r\n}"],"sourceRoot":""}